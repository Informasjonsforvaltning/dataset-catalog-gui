function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { CommandBarButton, CommandBar as FabricCommandBar } from '@fluentui/react';
import { getClassNames } from './CommandBar.classNames';
import classnames from 'classnames';

/*
 * visibleName CommandBar (Menyknapper)
 */
const CommandBar = props => {
  const {
    items,
    farItems,
    ariaLabel,
    className
  } = props,
        rest = _objectWithoutProperties(props, ["items", "farItems", "ariaLabel", "className"]);

  const {
    commandBar
  } = getClassNames(props);
  return /*#__PURE__*/React.createElement("nav", {
    "aria-label": ariaLabel
  }, /*#__PURE__*/React.createElement(FabricCommandBar, _extends({
    buttonAs: Custom
  }, rest, {
    items: items,
    className: classnames(commandBar, className),
    farItems: farItems
  })));
};

CommandBar.defaultProps = {
  items: [],
  farItems: [],
  ariaLabel: '',
  className: ''
};

const Custom = props => {
  const {
    tabButton
  } = getClassNames(props);

  const {
    className,
    children
  } = props,
        rest = _objectWithoutProperties(props, ["className", "children"]);

  return /*#__PURE__*/React.createElement(CommandBarButton, _extends({
    className: classnames(tabButton, className)
  }, rest), children);
};

export default CommandBar;