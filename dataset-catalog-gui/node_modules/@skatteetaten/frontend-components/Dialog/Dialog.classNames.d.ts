import { DialogProps } from './Dialog.types';
export declare const getClassNames: (props: DialogProps, tag?: string) => import("@fluentui/merge-styles").IProcessedStyleSet<{
    main: {
        displayName: string;
        position: string;
        selectors: {
            '& .ms-Dialog-main': {
                background: string;
                backgroundSize: string;
                backgroundRepeat: string;
                backgroundPosition: string;
                paddingBottom: number;
                backgroundColor: string;
                border: string;
                height: string;
                selectors: {
                    [x: string]: {
                        borderColor: any;
                        borderStyle: string;
                        borderWidth: string;
                        minWidth: string | number | undefined;
                        maxWidth: string | number | undefined;
                    };
                };
            } | {
                background?: undefined;
                backgroundSize?: undefined;
                backgroundRepeat?: undefined;
                backgroundPosition?: undefined;
                paddingBottom?: undefined;
                backgroundColor?: undefined;
                border?: undefined;
                height: string;
                selectors: {
                    [x: string]: {
                        borderColor: any;
                        borderStyle: string;
                        borderWidth: string;
                        minWidth: string | number | undefined;
                        maxWidth: string | number | undefined;
                    };
                };
            };
            '& .ms-Modal-scrollableContent': {
                overflowY: string;
                overflowX: string;
                WebkitOverflowScrolling: string;
                selectors: {
                    [x: string]: {
                        position: string;
                        top: number;
                        bottom: number;
                        minWidth: string | number | undefined;
                        maxWidth: string | number | undefined;
                    };
                };
            };
            '& .ms-Dialog-header': {
                backgroundImage: string;
                backgroundSize: string;
                backgroundRepeat: string;
                backgroundPosition: string;
                paddingTop: number;
            } | {
                backgroundImage?: undefined;
                backgroundSize?: undefined;
                backgroundRepeat?: undefined;
                backgroundPosition?: undefined;
                paddingTop?: undefined;
            };
            '& .ms-Button.ms-Dialog-button--close i': {
                fontWeight: string;
                fontSize: string;
                opacity: number;
            };
            '& .ms-Button.ms-Dialog-button--close:hover i': {
                fontWeight: string;
                fontSize: string;
                opacity: number;
                transition: string;
            };
            '& .ms-Dialog-title': {
                fontSize: string;
                fontWeight: string;
                padding: string;
            };
            '& .ms-Dialog-subText': {
                fontSize: string;
            };
            '& .ms-Overlay': {
                backgroundColor: string;
            };
            '& .ms-Dialog-inner': {
                padding: string;
            };
            '& .wait-alert-btn': {
                width: string;
            };
            '& .wait-alert-content': {
                overflowX: string;
                overflowY: string;
                maxWidth: string;
                maxHeight: string;
            };
            '& .wait-alert-heading': {
                fontSize: string;
                fontWeight: string;
            };
            '& .wait-alert-svg': {
                width: string;
            };
        };
    };
    helpButton: {
        displayName: string;
        zIndex: number;
        position: string;
        bottom: string;
        left: string;
    };
}>;
