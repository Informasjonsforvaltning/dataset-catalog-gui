import * as React from 'react';
import { getClassNames } from './ErrorSummary.classNames';
import { Link as SkeLink } from '../Link';
import { Icon } from '../Icon';
import classnames from 'classnames';
export const ErrorSummary = props => {
  const {
    id = 'errorsummary',
    shadowRootNode,
    titleTagName = 'h3',
    className,
    errors,
    onClick,
    children
  } = props;
  const styles = getClassNames(props);
  const TitleTag = titleTagName;
  const errorsExist = errors && errors.length;

  const scrollToId = elementId => {
    const element = shadowRootNode ? shadowRootNode.getElementById(elementId) : document.getElementById(elementId);

    if (element) {
      element.scrollIntoView({
        behavior: 'smooth'
      });
      element.focus();
    }
  };

  return errorsExist || children ? /*#__PURE__*/React.createElement("div", {
    className: classnames(className, styles.mainContainer),
    id: id,
    role: "status",
    "aria-live": "assertive"
  }, /*#__PURE__*/React.createElement("div", {
    className: styles.iconArea
  }, /*#__PURE__*/React.createElement("div", {
    className: styles.errorIcon
  }, /*#__PURE__*/React.createElement(Icon, {
    iconName: 'Error'
  }))), /*#__PURE__*/React.createElement("div", {
    className: styles.errorListContainer
  }, /*#__PURE__*/React.createElement(TitleTag, null, props.title), errors && /*#__PURE__*/React.createElement("ul", null, errors.map(error => /*#__PURE__*/React.createElement("li", {
    key: error.id
  }, /*#__PURE__*/React.createElement(SkeLink, {
    linkGroup: true,
    tabIndex: 0,
    icon: "ArrowForward",
    placement: "before",
    text: error.error,
    onClick: () => {
      onClick ? onClick(error.id) : scrollToId(error.id);
    }
  })))), children)) : null;
};