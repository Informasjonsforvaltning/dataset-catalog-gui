function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import classnames from 'classnames';
import * as React from 'react';
import { Icon } from '../Icon';
import { ActionButton } from '../ActionButton';
import { getClassNames } from './ScrollToTopButton.classNames';

/*
 * visibleName ScrollToTopButton (GÃ¥ til toppen)
 */
export class ScrollToTopButton extends React.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      skjult: true
    });

    _defineProperty(this, "sjekkSkjulKnapp", () => {
      const {
        skjult
      } = this.state;
      window.scrollY === 0 ? !skjult && this.setState({
        skjult: true
      }) : skjult && this.setState({
        skjult: false
      });
    });
  }

  componentDidMount() {
    window.addEventListener('scroll', this.sjekkSkjulKnapp);
    this.sjekkSkjulKnapp();
  }

  componentWillUnmount() {
    window.removeEventListener('scroll', this.sjekkSkjulKnapp);
  }

  render() {
    const {
      id,
      customClassNames,
      label
    } = this.props; // @ts-ignore TODO

    const styles = getClassNames(this.props);
    const visKlasse = this.state.skjult ? '' : styles.vis;
    return /*#__PURE__*/React.createElement("div", {
      id: id,
      className: classnames(styles.topcontainer, customClassNames?.topContainer),
      "aria-hidden": "true"
    }, /*#__PURE__*/React.createElement("div", {
      className: classnames(styles.container, visKlasse, customClassNames?.container)
    }, /*#__PURE__*/React.createElement("div", {
      className: classnames(styles.box, customClassNames?.box)
    }, /*#__PURE__*/React.createElement(ActionButton, {
      className: classnames(styles.actionButton, customClassNames?.button),
      ariaLabel: label,
      onClick: () => window.scrollTo(0, 0)
    }, /*#__PURE__*/React.createElement("div", {
      className: classnames(styles.iconFixateContainer, customClassNames?.iconContainer)
    }, /*#__PURE__*/React.createElement("div", {
      className: styles.iconFixate
    }, /*#__PURE__*/React.createElement(Icon, {
      className: classnames(styles.icon, customClassNames?.icon),
      iconName: 'MoveUp'
    }))), /*#__PURE__*/React.createElement("div", {
      className: classnames(styles.label, customClassNames?.label)
    }, label)))));
  }

}

_defineProperty(ScrollToTopButton, "defaultProps", {
  label: 'Til toppen',
  containerMaxWidth: undefined
});