function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { Icon } from '../../Icon';

const Content = props => {
  const TitleElement = () => {
    switch (props.headingLevel) {
      case 3:
        return /*#__PURE__*/React.createElement("h3", null, props.heading);

      case 4:
        return /*#__PURE__*/React.createElement("h4", null, props.heading);

      case 5:
        return /*#__PURE__*/React.createElement("h5", null, props.heading);

      case 6:
        return /*#__PURE__*/React.createElement("h6", null, props.heading);

      default:
        return /*#__PURE__*/React.createElement("h2", null, props.heading);
    }
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {
    iconName: props.icon
  }), /*#__PURE__*/React.isValidElement(props.heading) ? props.heading : /*#__PURE__*/React.createElement(TitleElement, null), /*#__PURE__*/React.createElement("p", null, props.description || props.children));
};
/*
 * visibleName NavigationContent (Innhold til forsideknapp)
 */


export const NavigationContent = props => {
  const {
    renderContent,
    id,
    className,
    icon,
    heading,
    description,
    children,
    useButtons,
    headingLevel
  } = props,
        htmlAttributes = _objectWithoutProperties(props, ["renderContent", "id", "className", "icon", "heading", "description", "children", "useButtons", "headingLevel"]);

  const contentProps = {
    icon,
    heading,
    description,
    children,
    headingLevel
  };

  if (typeof props.to === 'function') {
    if (useButtons) {
      return /*#__PURE__*/React.createElement("button", {
        onClick: props.to
      }, /*#__PURE__*/React.createElement(Content, contentProps));
    } else {
      throw new Error('When property "to" is set as function you have to set "useButtons" to true');
    }
  }

  return /*#__PURE__*/React.createElement("li", {
    id: id,
    key: props.to,
    className: className
  }, renderContent ? renderContent(props.to, /*#__PURE__*/React.createElement(Content, contentProps)) : /*#__PURE__*/React.createElement("a", _extends({
    href: props.to
  }, htmlAttributes), /*#__PURE__*/React.createElement(Content, contentProps)));
};