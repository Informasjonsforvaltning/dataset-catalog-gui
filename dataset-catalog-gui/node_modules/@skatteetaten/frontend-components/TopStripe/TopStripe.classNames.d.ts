export declare const getClassNames: (contentWidth?: string) => import("@fluentui/merge-styles").IProcessedStyleSet<{
    topStripe: {
        position: string;
    };
    background: {
        position: string;
        backgroundColor: string;
        zIndex: number;
    };
    overlay: {
        zIndex: number;
        position: string;
        top: number;
        right: number;
        left: number;
        bottom: number;
        minHeight: string;
        backgroundColor: string;
        transition: string;
        display: string;
    };
    overlayShow: {
        display: string;
    };
    topStripeContainer: {
        zIndex: number;
        position: string;
        display: string;
        justifyContent: string;
        flexWrap: string;
        alignItems: string;
        backgroundColor: string;
        color: string;
        fontSize: string;
        padding: number;
        margin: number;
        selectors: {
            [x: string]: {
                listStyleType: string;
                position: string;
                fontWeight?: undefined;
                color?: undefined;
                border?: undefined;
                textDecoration?: undefined;
                justifyContent?: undefined;
                margin?: undefined;
                maxWidth?: undefined;
            } | {
                fontWeight: string;
                color: string;
                border: string;
                textDecoration: string;
                listStyleType?: undefined;
                position?: undefined;
                justifyContent?: undefined;
                margin?: undefined;
                maxWidth?: undefined;
            } | {
                color: string;
                listStyleType?: undefined;
                position?: undefined;
                fontWeight?: undefined;
                border?: undefined;
                textDecoration?: undefined;
                justifyContent?: undefined;
                margin?: undefined;
                maxWidth?: undefined;
            } | {
                justifyContent: string;
                margin: string;
                listStyleType?: undefined;
                position?: undefined;
                fontWeight?: undefined;
                color?: undefined;
                border?: undefined;
                textDecoration?: undefined;
                maxWidth?: undefined;
            } | {
                maxWidth: string;
                listStyleType?: undefined;
                position?: undefined;
                fontWeight?: undefined;
                color?: undefined;
                border?: undefined;
                textDecoration?: undefined;
                justifyContent?: undefined;
                margin?: undefined;
            };
            li: {
                listStyleType: string;
                position: string;
            };
            a: {
                fontWeight: string;
                color: string;
                border: string;
                textDecoration: string;
            };
            'a:active, a:active i': {
                color: string;
            };
        };
    };
    loggedInUser: {
        order: string;
        width: string;
        selectors: {
            [x: string]: {
                order: number;
                width: string;
            };
        };
    };
    hideOnMobile: {
        display: string;
        selectors: {
            [x: string]: {
                display: string;
            };
        };
    };
    topStripeElement: {
        maxHeight: string;
        selectors: {
            [x: string]: {
                padding: string;
                borderBottom: string;
                color?: undefined;
                backgroundColor?: undefined;
                marginLeft?: undefined;
            } | {
                color: string;
                backgroundColor: string;
                padding?: undefined;
                borderBottom?: undefined;
                marginLeft?: undefined;
            } | {
                marginLeft: string;
                padding?: undefined;
                borderBottom?: undefined;
                color?: undefined;
                backgroundColor?: undefined;
            };
            a: {
                padding: string;
                borderBottom: string;
            };
            'a:focus, a:hover, > span:hover > a': {
                color: string;
                backgroundColor: string;
            };
        };
    };
    topStripeUser: {
        alignItems: string;
        display: string;
        flexDirection: string;
        padding: string;
        selectors: {
            '> i': {
                fontSize: string;
                alignSelf: string;
            };
        };
    };
}>;
