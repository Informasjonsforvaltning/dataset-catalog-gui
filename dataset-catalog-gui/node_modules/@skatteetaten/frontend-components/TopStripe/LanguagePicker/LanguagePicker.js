import * as React from 'react';
import { TopStripeButton } from '../TopStripeButton';
import { TopStripeMenu } from '../TopStripeMenu';
import { EnglishFlag, NorwegianFlag, SamiFlag } from '../assets';
import { Icon } from '../../Icon';
import { UseScreen } from '../../utils';
import { getClassNames } from './LanguagePicker.classNames';
import { useEffect } from 'react';
import classnames from 'classnames';
export let LanguageEnum;

(function (LanguageEnum) {
  LanguageEnum["BOKMAAL"] = "nb";
  LanguageEnum["NYNORSK"] = "nn";
  LanguageEnum["ENGLISH"] = "en";
  LanguageEnum["SAMI"] = "se";
})(LanguageEnum || (LanguageEnum = {}));

const generateLanguagePickerText = language => {
  switch (language) {
    case LanguageEnum.BOKMAAL:
      return 'Bokmål';

    case LanguageEnum.NYNORSK:
      return 'Nynorsk';

    case LanguageEnum.ENGLISH:
      return 'English';

    case LanguageEnum.SAMI:
      return 'Sámegiella';
  }
};

const displayFlag = language => {
  switch (language) {
    case LanguageEnum.BOKMAAL:
      return /*#__PURE__*/React.createElement("img", {
        src: NorwegianFlag,
        alt: ''
      });

    case LanguageEnum.NYNORSK:
      return /*#__PURE__*/React.createElement("img", {
        src: NorwegianFlag,
        alt: ''
      });

    case LanguageEnum.ENGLISH:
      return /*#__PURE__*/React.createElement("img", {
        src: EnglishFlag,
        alt: ''
      });

    case LanguageEnum.SAMI:
      return /*#__PURE__*/React.createElement("img", {
        src: SamiFlag,
        alt: ''
      });
  }
};

const generateLanguagePickerTitle = language => {
  const styles = getClassNames();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
    className: styles.languageButtonFlag
  }, displayFlag(language)), generateLanguagePickerText(language));
};

const LanguagePickerButton = ({
  buttonLanguage,
  selectedLanguage,
  setLanguage,
  showOnMobile
}) => {
  const styles = getClassNames();
  const isSelectedLanguage = buttonLanguage === selectedLanguage;
  return /*#__PURE__*/React.createElement(TopStripeButton, {
    onClick: () => setLanguage(buttonLanguage),
    showOnMobile: showOnMobile,
    className: styles.languageButton,
    role: 'menuitem',
    "aria-current": isSelectedLanguage
  }, isSelectedLanguage && /*#__PURE__*/React.createElement(Icon, {
    iconName: 'Check',
    className: styles.checkIcon
  }), /*#__PURE__*/React.createElement("span", {
    className: classnames(styles.languageButtonContent, styles.languageButtonFlag)
  }, displayFlag(buttonLanguage)), /*#__PURE__*/React.createElement("span", {
    className: classnames(styles.languageButtonContent, styles.languageButtonText, {
      [styles.languageButtonIsNotSelected]: !isSelectedLanguage
    })
  }, generateLanguagePickerText(buttonLanguage)));
};

export const LanguagePicker = props => {
  const {
    className,
    selectedLanguage,
    setLanguage,
    showOnMobile = true,
    showSami = false
  } = props;
  const [languages, setLanguages] = React.useState([]);
  useEffect(() => {
    showSami ? setLanguages([LanguageEnum.BOKMAAL, LanguageEnum.NYNORSK, LanguageEnum.ENGLISH, LanguageEnum.SAMI]) : setLanguages([LanguageEnum.BOKMAAL, LanguageEnum.NYNORSK, LanguageEnum.ENGLISH]);
  }, [showSami]);
  useEffect(() => {
    document.documentElement.lang = selectedLanguage;
  }, [selectedLanguage]);
  const screenSize = UseScreen();

  if (screenSize.sm && !showOnMobile) {
    return null;
  }

  return /*#__PURE__*/React.createElement(TopStripeMenu, {
    "data-testid": 'language-picker',
    showOnMobile: showOnMobile,
    title: generateLanguagePickerTitle(selectedLanguage),
    className: className
  }, languages.map(language => {
    return /*#__PURE__*/React.createElement(LanguagePickerButton, {
      key: language,
      buttonLanguage: language,
      selectedLanguage: selectedLanguage,
      setLanguage: setLanguage,
      showOnMobile: showOnMobile
    });
  }));
};