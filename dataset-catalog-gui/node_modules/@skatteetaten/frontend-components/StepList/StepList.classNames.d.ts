import { IStyle } from '@fluentui/merge-styles';
import { FontSizes, FontWeights } from '../utils';
export declare const getClassNames: (props: any) => import("@fluentui/merge-styles").IProcessedStyleSet<{
    arrowLine: {
        float: string;
        width: string;
        height: string;
        backgroundColor: string;
        position: string;
        bottom: number;
        selectors: {
            '@media only screen and (max-width: 479px)': {
                top: number;
                height: string;
            };
        };
    };
    containerStep: {
        margin: string;
    };
    content: {
        backgroundColor: string;
        padding: string;
    };
    divider: {
        margin: string;
        border: string;
        borderWidth: string;
        color: string;
        selectors: {
            '@media  only screen and (max-width: 479px)': {
                margin: string;
            };
        };
    };
    nextStep: {
        display: string;
    };
    numberWrapper: {
        paddingTop: string;
        position: string;
        top: number;
        bottom: number;
        left: number;
        selectors: {
            '@media only screen and (max-width: 479px)': {
                left: number;
                paddingTop: string;
            };
        };
    };
    stepAction: {
        marginLeft: string;
        height: string;
        selectors: {
            '@media only screen and (max-width: 479px)': {
                position: string;
                height: string;
                marginBottom: string;
            };
        };
    };
    stepContent: {
        display: string;
        flexWrap: string;
        padding: string;
        margin: string;
        position: string;
        selectors: {
            p: {
                margin: string;
                selectors: {
                    '@media only screen and (max-width: 479px)': {
                        margin: string;
                    };
                };
            };
            button: false | {
                selectors: {
                    '@media only screen and (max-width: 479px)': {
                        fontSize: FontSizes;
                    };
                    i: {
                        selectors: {
                            '@media only screen and (max-width: 479px)': {
                                fontSize: string;
                            };
                        };
                    };
                };
            };
            '@media only screen and (max-width: 479px)': {
                margin: string;
                padding: string | number;
                position: string;
            };
        };
    };
    stepContentInner: IStyle;
    stepLine: {
        float: string;
        width: number;
        backgroundColor: string;
        position: string;
        top: number;
        bottom: number;
        left: string | undefined;
        marginTop: string;
        height: string | undefined;
        selectors: {
            '&::after': false | {
                border: string;
                borderWidth: string;
                display: string;
                padding: string;
                transform: string;
                width: string;
                height: string;
                content: string;
                position: string;
                bottom: string;
                left: string;
                selectors: {
                    '@media only screen and (max-width: 479px)': {
                        borderWidth: string;
                        margin: string;
                    };
                };
            };
            '@media only screen and (max-width: 479px)': {
                width: string;
                height: string | undefined;
            };
        };
    };
    stepLineTop: {
        float: string;
        width: number;
        left: string | undefined;
        height: string;
        backgroundColor: string;
        position: string;
        selectors: {
            '@media only screen and (max-width: 479px)': {
                width: number;
                left: string | undefined;
            };
        };
    };
    stepList: {
        counterReset: string;
        position: string;
        backgroundColor: string;
        marginBottom: number;
    };
    stepNumber: {
        display: string;
        alignItems: string;
        justifyContent: string;
        backgroundColor: string;
        border: string;
        width: string;
        height: string;
        borderRadius: string;
        borderWidth: string;
        borderColor: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
        selectors: {
            '&::after': {
                content: string;
                color: string;
                selectors: {
                    '@media only screen and (max-width: 479px)': {
                        fontSize: string;
                    };
                };
            };
            i: {
                marginTop: number;
                selectors: {
                    '@media only screen and (max-width: 479px)': {
                        fontSize: string;
                    };
                };
            };
            '@media only screen and (max-width: 479px)': {
                width: string;
                height: string;
                fontSize: FontSizes;
                marginTop: number;
            };
        };
    };
    title: {
        fontSize: FontSizes;
        color: string;
        margin: string;
        marginTop: string;
        flex: string;
        selectors: {
            '@media only screen and (max-width: 479px)': {
                display: string;
                fontSize: FontSizes;
                margin: number | undefined;
                paddingTop: string;
            };
        };
    };
    titleText: {
        selectors: {
            '@media only screen and (max-width: 479px)': {
                fontSize: FontSizes;
                paddingTop: string;
            };
        };
    };
    wrapperStep: {
        display: string;
        counterIncrement: string;
        position: string;
        padding: string;
        border: string;
        selectors: {
            '@media  only screen and (max-width: 479px)': {
                border: string;
                outline: string;
                outlineOffset: string;
                padding: string;
            };
        };
    };
}>;
