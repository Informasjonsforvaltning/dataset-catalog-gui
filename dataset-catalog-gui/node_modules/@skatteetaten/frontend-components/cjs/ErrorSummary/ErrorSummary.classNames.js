"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getClassNames = void 0;

var _mergeStyles = require("@fluentui/merge-styles");

var _colors = _interopRequireDefault(require("../utils/designtokens/_colors.json"));

var _fontSizes = _interopRequireDefault(require("../utils/designtokens/_fontSizes.json"));

var _spacing = _interopRequireDefault(require("../utils/designtokens/_spacing.json"));

var _breakpoints = _interopRequireDefault(require("../utils/designtokens/_breakpoints.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const getClassNames = props => {
  return (0, _mergeStyles.mergeStyleSets)({
    mainContainer: {
      border: '2px solid '.concat(_colors.default['ske-color-status-error']),
      display: 'flex',
      backgroundColor: _colors.default['ske-color-white-100'],
      justifyContent: 'flex-start',
      width: 'fit-content',
      selectors: {
        '& h1, h2, h3, h4, h5, h6': {
          fontSize: _fontSizes.default['ske-font-size-l'],
          margin: '0'
        }
      },
      ul: {
        padding: 0
      },
      li: {
        display: 'block',
        cursor: 'pointer',
        lineHeight: _fontSizes.default['ske-line-height-s']
      }
    },
    iconArea: {
      width: '4rem',
      backgroundColor: _colors.default['ske-color-status-error'],
      textAlign: 'center',
      selectors: {
        [`@media (max-width: ${_breakpoints.default['ske-breakpoint-md']})`]: {
          width: '2rem'
        }
      }
    },
    errorIcon: {
      fontSize: '2.4rem',
      color: _colors.default['ske-color-white-100'],
      padding: '6px 8px 8px 4px',
      selectors: {
        [`@media (max-width: ${_breakpoints.default['ske-breakpoint-md']})`]: {
          fontSize: '1.4rem'
        }
      }
    },
    errorListContainer: {
      padding: `${_spacing.default['ske-spacing-lg']} ${_spacing.default['ske-spacing-xl']}`,
      selectors: {
        [`@media (max-width: ${_breakpoints.default['ske-breakpoint-md']})`]: {
          padding: '8px 12px'
        }
      }
    }
  });
};

exports.getClassNames = getClassNames;