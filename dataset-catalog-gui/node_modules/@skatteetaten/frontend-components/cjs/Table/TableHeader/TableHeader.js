"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableHeader = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../../Icon");

var _TableHeader = require("./TableHeader.classNames");

var _utils = require("../../utils");

var _utils2 = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TableHeader = props => {
  const {
    columns,
    sort,
    setSort
  } = props;
  const styles = (0, _TableHeader.getClassNames)(props);

  const setSortingState = columnFieldName => setSort({
    ascending: sort.columnFieldName === columnFieldName ? !sort.ascending : true,
    columnFieldName: columnFieldName
  });

  const onKeyDown = (e, fieldName) => {
    return e.key === 'Enter' ? setSortingState(fieldName) : null;
  };

  const thElements = columns && columns.map(key => {
    if (!key.name) {
      // NÃ¥r kolonnetittel er tom skal ikke kolonnen ha <th />
      return /*#__PURE__*/_react.default.createElement("td", {
        key: key.fieldName,
        className: styles.tabellTheadCellIsEmpty
      });
    }

    if (key.srOnly) {
      return /*#__PURE__*/_react.default.createElement("th", {
        key: key.fieldName,
        className: styles.tabellTheadCellIsEmpty
      }, /*#__PURE__*/_react.default.createElement("span", {
        className: "sr-only"
      }, key.name));
    }

    if (key.sortable) {
      const isSorted = sort.columnFieldName === key.fieldName;
      const iconName = (0, _utils2.getIconNameForTheadCell)(isSorted, sort.ascending);
      const ariaLabel = (0, _utils2.getAriaLabelForTheadCell)(key.name, key.fieldName, isSorted, sort.ascending, _utils.t);
      return /*#__PURE__*/_react.default.createElement("th", {
        key: key.fieldName,
        className: (0, _classnames.default)(styles.tabellTheadCell, styles.tabellTheadCellIsSortable, {
          [styles.tabellTheadCellAlignedRight]: key.alignment === 'right',
          [styles.tabellTheadCellAlignedCenter]: key.alignment === 'center',
          [styles.tabellTheadCellHiddenOnMobile]: key.hideOnMobile
        }),
        tabIndex: 0,
        scope: "col",
        "aria-label": ariaLabel,
        onClick: () => setSortingState(key.fieldName),
        onKeyDown: e => onKeyDown(e, key.fieldName)
      }, key.name, /*#__PURE__*/_react.default.createElement(_Icon.Icon, {
        iconName: iconName,
        className: !key.autohideSorting ? 'noAutoHide' : undefined
      }));
    }

    return /*#__PURE__*/_react.default.createElement("th", {
      key: key.fieldName,
      className: (0, _classnames.default)(styles.tabellTheadCell, {
        [styles.tabellTheadCellAlignedRight]: key.alignment === 'right',
        [styles.tabellTheadCellAlignedCenter]: key.alignment === 'center',
        [styles.tabellTheadCellHiddenOnMobile]: key.hideOnMobile
      }),
      scope: "col"
    }, key.name);
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, thElements);
};

exports.TableHeader = TableHeader;