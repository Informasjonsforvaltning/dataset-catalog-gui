"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getClassNames = void 0;

var _mergeStyles = require("@fluentui/merge-styles");

var _react = require("@fluentui/react");

var _spacing = _interopRequireDefault(require("../../utils/designtokens/_spacing.json"));

var _fontSizes = _interopRequireDefault(require("../../utils/designtokens/_fontSizes.json"));

var _breakpoints = _interopRequireDefault(require("../../utils/designtokens/_breakpoints.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const getClassNames = props => {
  const {
    compactTable
  } = props;
  const palette = (0, _react.getTheme)().palette;
  return (0, _mergeStyles.mergeStyleSets)({
    tabellThead: {
      display: 'table-header-group'
    },
    tabellTheadCell: {
      borderBottom: `2px solid ${palette.skeColor.blackAlt}`,
      padding: compactTable ? _spacing.default['ske-spacing-sm'] : _spacing.default['ske-spacing-lg'],
      fontSize: compactTable ? _fontSizes.default['ske-font-size-s'] : 'inherit',
      verticalAlign: 'bottom',
      fontWeight: _fontSizes.default['ske-font-weight-bold'],
      position: 'relative',
      selectors: {
        i: {
          color: `${palette.skeColor.blue}`,
          position: 'absolute',
          paddingLeft: _spacing.default['ske-spacing-xs'],
          cursor: 'pointer',
          selectors: {
            ':hover': {
              color: `${palette.skeColor.darkBlue}`
            },
            '& [data-icon-name="ArrowUpDown"]': {
              selectors: {
                [`@media (min-width: ${_breakpoints.default['ske-breakpoint-lg']})`]: {
                  opacity: 0
                },
                '& .noAutoHide': {
                  opacity: 1
                },
                ':hover': {
                  opacity: 1
                }
              }
            }
          }
        },
        ':focus': {
          color: `${palette.skeColor.blue}`,
          outline: '0'
        }
      }
    },
    tabellTheadCellIsSortable: {
      cursor: 'pointer',
      paddingRight: `${_spacing.default['ske-spacing-xl']} !important`,
      selectors: {
        ':hover [data-icon-name="ArrowUpDown"]': {
          opacity: 1
        },
        ':focus [data-icon-name="ArrowUpDown"]': {
          opacity: 1
        }
      }
    },
    tabellTheadCellAlignedRight: {
      justifyContent: 'flex-end',
      textAlign: 'right'
    },
    tabellTheadCellAlignedCenter: {
      justifyContent: 'center',
      textAlign: 'center'
    },
    tabellTheadCellIsEmpty: {
      borderBottom: `2px solid ${palette.skeColor.blackAlt}`
    },
    tabellTheadCellHiddenOnMobile: {
      display: 'none',
      selectors: {
        [`@media (min-width: ${_breakpoints.default['ske-breakpoint-md']})`]: {
          display: 'table-cell'
        }
      }
    }
  });
};

exports.getClassNames = getClassNames;