"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _wait_alert_illustration = _interopRequireDefault(require("./assets/wait_alert_illustration.svg"));

var _utils = require("../utils");

var _Button = require("../Button");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const WaitAlert = props => {
  return /*#__PURE__*/React.createElement("div", {
    className: 'wait-alert-content'
  }, /*#__PURE__*/React.createElement("img", {
    className: 'wait-alert-svg',
    src: _wait_alert_illustration.default,
    alt: (0, _utils.t)('dialog.waitAlert.alt')
  }), props.children ? props.children : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    role: "heading",
    id: 'waitAlertHeading',
    className: 'wait-alert-heading',
    "aria-level": 1
  }, (0, _utils.t)('dialog.waitAlert.title')), /*#__PURE__*/React.createElement("p", {
    id: 'waitAlertText'
  }, (0, _utils.t)('dialog.waitAlert.paragraph'))), /*#__PURE__*/React.createElement(_Button.Button, {
    buttonStyle: "primary",
    className: 'wait-alert-btn',
    onClick: () => {
      props.onDismiss && props.onDismiss();
    }
  }, props.waitAlertBtnText ? props.waitAlertBtnText : (0, _utils.t)('dialog.waitAlert.button_text')));
};

var _default = WaitAlert;
exports.default = _default;