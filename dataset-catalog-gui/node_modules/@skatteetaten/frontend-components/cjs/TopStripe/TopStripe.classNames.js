"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getClassNames = void 0;

var _mergeStyles = require("@fluentui/merge-styles");

var _colors = _interopRequireDefault(require("../utils/designtokens/_colors.json"));

var _fontSizes = _interopRequireDefault(require("../utils/designtokens/_fontSizes.json"));

var _spacing = _interopRequireDefault(require("../utils/designtokens/_spacing.json"));

var _breakpoints = _interopRequireDefault(require("../utils/designtokens/_breakpoints.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const getClassNames = (contentWidth = '100%') => {
  return (0, _mergeStyles.mergeStyleSets)({
    topStripe: {
      position: 'relative'
    },
    background: {
      position: 'relative',
      backgroundColor: _colors.default['ske-color-black-100'],
      zIndex: 125
    },
    overlay: {
      zIndex: 100,
      position: 'fixed',
      top: 0,
      right: 0,
      left: 0,
      bottom: 0,
      minHeight: '12.5rem',
      backgroundColor: 'rgba(255, 255, 255, 0.8)',
      transition: '0.3s ease-out',
      display: 'none'
    },
    overlayShow: {
      display: 'block'
    },
    topStripeContainer: {
      zIndex: 150,
      position: 'relative',
      display: 'flex',
      justifyContent: 'space-between',
      flexWrap: 'wrap',
      alignItems: 'center',
      backgroundColor: _colors.default['ske-color-black-100'],
      color: _colors.default['ske-color-white-100'],
      fontSize: _fontSizes.default['ske-font-size-s'],
      padding: 0,
      margin: 0,
      selectors: {
        li: {
          listStyleType: 'none',
          position: 'relative'
        },
        a: {
          fontWeight: _fontSizes.default['ske-font-weight-regular'],
          color: _colors.default['ske-color-white-100'],
          border: 'none',
          textDecoration: 'underline'
        },
        'a:active, a:active i': {
          color: _colors.default['ske-color-black-100']
        },
        [`@media (min-width: ${_breakpoints.default['ske-breakpoint-sm']})`]: {
          justifyContent: 'flex-end',
          margin: `0 ${_spacing.default['ske-spacing-md']}`
        },
        [`@media (min-width: ${_breakpoints.default['ske-breakpoint-lg']})`]: {
          maxWidth: contentWidth
        }
      }
    },
    loggedInUser: {
      order: '-1',
      width: '100%',
      selectors: {
        [`@media (min-width: ${_breakpoints.default['ske-breakpoint-sm']})`]: {
          order: 0,
          width: 'auto'
        }
      }
    },
    hideOnMobile: {
      display: 'none',
      selectors: {
        [`@media (min-width: ${_breakpoints.default['ske-breakpoint-sm']})`]: {
          display: 'block'
        }
      }
    },
    topStripeElement: {
      maxHeight: '40px',
      selectors: {
        a: {
          padding: '0.75rem 0.5rem',
          borderBottom: 'none !important'
        },
        'a:focus, a:hover, > span:hover > a': {
          color: _colors.default['ske-color-black-100'],
          backgroundColor: _colors.default['ske-color-white-100']
        },
        [`@media (min-width: ${_breakpoints.default['ske-breakpoint-sm']})`]: {
          marginLeft: _spacing.default['ske-spacing-md']
        }
      }
    },
    topStripeUser: {
      alignItems: 'center',
      display: 'flex',
      flexDirection: 'row',
      padding: _spacing.default['ske-spacing-md'],
      selectors: {
        '> i': {
          fontSize: _fontSizes.default['ske-font-size-icon-l'],
          alignSelf: 'start'
        }
      }
    }
  });
};

exports.getClassNames = getClassNames;