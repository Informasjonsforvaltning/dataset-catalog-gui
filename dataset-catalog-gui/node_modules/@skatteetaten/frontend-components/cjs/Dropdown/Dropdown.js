"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dropdown = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = require("@fluentui/react");

var React = _interopRequireWildcard(require("react"));

var _Dropdown = require("./Dropdown.classNames");

var _utils = require("../utils");

var _Icon = require("../Icon");

var _LabelWithCallout = require("../LabelWithCallout");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/*
 * visibleName Dropdown (Nedtrekksliste)
 */
const Dropdown = props => {
  const {
    children,
    errorMessage,
    label,
    labelButtonAriaLabel,
    help,
    onRenderLabel,
    required = false,
    className,
    id,
    labelWithCalloutProps,
    onCalloutToggle,
    calloutProps,
    readOnly,
    requiredWithMark = false
  } = props,
        rest = _objectWithoutProperties(props, ["children", "errorMessage", "label", "labelButtonAriaLabel", "help", "onRenderLabel", "required", "className", "id", "labelWithCalloutProps", "onCalloutToggle", "calloutProps", "readOnly", "requiredWithMark"]);

  const generatedId = (0, _utils.generateId)();
  const mainId = id ? id : 'dropdown-' + generatedId;
  const inputId = mainId + '-input';
  const labelId = mainId + '-label';
  const styles = (0, _Dropdown.getClassNames)(props);
  const dropdownStyles = (0, _Dropdown.getCalloutStyles)();
  return /*#__PURE__*/React.createElement("div", {
    id: mainId
  }, /*#__PURE__*/React.createElement(_LabelWithCallout.LabelWithCallout, {
    id: labelId,
    inputId: readOnly ? inputId : inputId + '-option',
    label: label,
    requiredMark: requiredWithMark,
    buttonAriaLabel: labelButtonAriaLabel,
    help: help,
    onCalloutToggle: onCalloutToggle,
    calloutProps: _objectSpread({}, labelWithCalloutProps?.calloutProps)
  }), readOnly ? /*#__PURE__*/React.createElement("input", {
    id: inputId,
    type: "text",
    readOnly: true,
    className: styles.readOnly,
    "aria-invalid": errorMessage ? true : false,
    value: props.options.filter(option => option.key === (props.selectedKey || props.defaultSelectedKey))[0].text
  }) : /*#__PURE__*/React.createElement(_react.Dropdown, _extends({}, rest, {
    ariaLabel: label,
    "aria-invalid": errorMessage ? true : false,
    id: inputId,
    required: required || requiredWithMark,
    className: (0, _classnames.default)(styles.main, className),
    styles: dropdownStyles,
    onRenderCaretDown: () => /*#__PURE__*/React.createElement(_Icon.Icon, {
      iconName: 'ChevronDown'
    }),
    errorMessage: errorMessage,
    calloutProps: _objectSpread({}, calloutProps)
  }), children));
}; // @ts-ignore


exports.Dropdown = Dropdown;
Dropdown.ItemType = _react.DropdownMenuItemType;