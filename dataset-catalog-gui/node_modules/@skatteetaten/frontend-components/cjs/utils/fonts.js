"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createFont = exports.LineHeightSizes = exports.IconFontSizes = exports.Fonts = exports.FontWeights = exports.FontSizes = void 0;
let FontSizes;
exports.FontSizes = FontSizes;

(function (FontSizes) {
  FontSizes["mini"] = "0.625rem";
  FontSizes["xSmall"] = "0.75rem";
  FontSizes["small"] = "0.875rem";
  FontSizes["smallPlus"] = "0.9375rem";
  FontSizes["medium"] = "1rem";
  FontSizes["mediumPlus"] = "1.0625rem";
  FontSizes["icon"] = "1.25rem";
  FontSizes["large"] = "1.125rem";
  FontSizes["largePlus"] = "1.25rem";
  FontSizes["xLarge"] = "1.375rem";
  FontSizes["xxLarge"] = "1.875rem";
  FontSizes["superLarge"] = "2.625rem";
  FontSizes["mega"] = "4.25rem";
})(FontSizes || (exports.FontSizes = FontSizes = {}));

let LineHeightSizes;
exports.LineHeightSizes = LineHeightSizes;

(function (LineHeightSizes) {
  LineHeightSizes["mini"] = "1.6";
  LineHeightSizes["xSmall"] = "1.6666";
  LineHeightSizes["small"] = "1.8525";
  LineHeightSizes["smallPlus"] = "1.733";
  LineHeightSizes["medium"] = "1.625";
  LineHeightSizes["mediumPlus"] = "1.625";
  LineHeightSizes["large"] = "1.6666";
  LineHeightSizes["largePlus"] = "1.25rem";
  LineHeightSizes["xLarge"] = "1.636";
  LineHeightSizes["xxLarge"] = "1.6";
  LineHeightSizes["superLarge"] = "1.524";
  LineHeightSizes["mega"] = "1.4118";
})(LineHeightSizes || (exports.LineHeightSizes = LineHeightSizes = {}));

let FontWeights;
exports.FontWeights = FontWeights;

(function (FontWeights) {
  FontWeights[FontWeights["light"] = 100] = "light";
  FontWeights[FontWeights["semilight"] = 300] = "semilight";
  FontWeights[FontWeights["regular"] = 400] = "regular";
  FontWeights[FontWeights["medium"] = 500] = "medium";
  FontWeights[FontWeights["semibold"] = 600] = "semibold";
  FontWeights[FontWeights["bold"] = 700] = "bold";
})(FontWeights || (exports.FontWeights = FontWeights = {}));

let IconFontSizes;
exports.IconFontSizes = IconFontSizes;

(function (IconFontSizes) {
  IconFontSizes["xSmall"] = "0.625rem";
  IconFontSizes["small"] = "0.75rem";
  IconFontSizes["medium"] = "1rem";
  IconFontSizes["large"] = "1.25rem";
  IconFontSizes["xlarge"] = "1.5rem";
  IconFontSizes["xxlarge"] = "2rem";
  IconFontSizes["mega"] = "2.5rem";
})(IconFontSizes || (exports.IconFontSizes = IconFontSizes = {}));

const createFont = (size, weight, localeCode = 'no') => {
  return {
    fontFamily: "'Helvetica Neue', Helvetica , Arial, 'Liberation Sans', 'Nimbus Sans L', sans-serif",
    MozOsxFontSmoothing: 'grayscale',
    WebkitFontSmoothing: 'antialiased',
    fontSize: size,
    fontWeight: weight
  };
};

exports.createFont = createFont;
const Fonts = {
  tiny: createFont(FontSizes.mini, FontWeights.semibold),
  xSmall: createFont(FontSizes.xSmall, FontWeights.regular),
  small: createFont(FontSizes.small, FontWeights.regular),
  smallPlus: createFont(FontSizes.smallPlus, FontWeights.regular),
  medium: createFont(FontSizes.medium, FontWeights.regular),
  mediumPlus: createFont(FontSizes.mediumPlus, FontWeights.regular),
  large: createFont(FontSizes.large, FontWeights.semilight),
  xLarge: createFont(FontSizes.xLarge, FontWeights.light),
  xxLarge: createFont(FontSizes.xxLarge, FontWeights.light),
  superLarge: createFont(FontSizes.superLarge, FontWeights.light),
  mega: createFont(FontSizes.mega, FontWeights.light)
};
exports.Fonts = Fonts;