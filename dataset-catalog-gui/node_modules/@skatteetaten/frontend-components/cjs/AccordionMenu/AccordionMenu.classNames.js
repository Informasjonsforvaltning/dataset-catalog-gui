"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getClassNames = getClassNames;

var _mergeStyles = require("@fluentui/merge-styles");

var _react = require("@fluentui/react");

var _utils = require("../utils");

function getClassNames(props) {
  const palette = (0, _react.getTheme)().palette;
  const flex = props.flex;
  return (0, _mergeStyles.mergeStyleSets)({
    accordionMenu: {
      padding: 0,
      margin: '0 !important',
      selectors: {
        li: {
          listStyle: 'none',
          margin: '0 !important',
          selectors: {
            '&:last-child': {
              borderBottom: `2px solid ${palette.skeColor.grey}`
            }
          }
        }
      }
    },
    menuItem: {
      backgroundColor: palette.skeColor.white,
      display: 'flex',
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      width: '100%',
      border: 'none',
      borderTop: `2px solid ${palette.skeColor.grey}`,
      textAlign: 'left',
      padding: '0 15px',
      selectors: {
        '&:hover': {
          backgroundColor: palette.skeColor.backgroundHoverColor,
          cursor: 'pointer'
        },
        '&:focus': {
          backgroundColor: palette.skeColor.backgroundFocusColor,
          outline: 'none'
        },
        '&:active': {
          color: palette.skeColor.darkBlue
        }
      }
    },
    menuItemIsOpen: {
      borderTop: `2px solid ${palette.skeColor.grey} !important`
    },
    menuItemTitle: {
      display: 'flex',
      alignItems: 'center',
      flex: flex ? '1 1 auto' : undefined
    },
    title: {
      fontSize: _utils.FontSizes.medium,
      display: flex ? 'flex' : undefined,
      flex: flex ? '1 1 auto' : undefined,
      margin: '0 15px 0 15px',
      padding: '10px 0'
    },
    iconWrapper: {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      flexGrow: '0',
      flexShrink: '0',
      height: 40,
      width: 40,
      border: `2px solid ${palette.skeColor.blackAlt}`,
      borderRadius: '50%',
      margin: '8px 0 8px 0',
      fontSize: _utils.IconFontSizes.xlarge
    },
    toggleButton: {
      color: palette.skeColor.blue,
      selectors: {
        i: {
          fontSize: _utils.IconFontSizes.xlarge,
          paddingLeft: '1px'
        }
      }
    },
    toggleButtonOpen: {
      color: palette.skeColor.blue,
      selectors: {
        i: {
          transform: 'rotate(180deg)',
          paddingLeft: '1px'
        }
      }
    },
    content: {
      borderTop: `2px solid ${palette.skeColor.grey}`,
      padding: 15,
      background: palette.skeColor.grey5,
      display: 'block'
    }
  });
}