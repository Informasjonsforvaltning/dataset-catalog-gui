"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccordionMenuItem = void 0;

var React = _interopRequireWildcard(require("react"));

var _Icon = require("../../Icon");

var _classnames = _interopRequireDefault(require("classnames"));

var _AccordionMenu = require("../AccordionMenu.classNames");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
 * visibleName AccordionMenuItem (Element i trekkspillmeny)
 */
const AccordionMenuItem = props => {
  const styles = (0, _AccordionMenu.getClassNames)(props);
  const {
    heading,
    icon,
    onClick,
    className,
    children,
    ariaLabel
  } = props;
  const [isContentOpen, setContentOpen] = React.useState(props.isOpen || false);

  const toggleVisibility = () => {
    setContentOpen(!isContentOpen);
  };

  const clickHandler = () => {
    if (onClick && !isContentOpen) {
      onClick();
    }

    toggleVisibility();
  };

  return /*#__PURE__*/React.createElement("li", {
    className: className,
    "aria-label": ariaLabel
  }, /*#__PURE__*/React.createElement("button", {
    onClick: clickHandler,
    className: isContentOpen ? (0, _classnames.default)(styles.menuItem, styles.menuItemIsOpen) : styles.menuItem,
    "aria-expanded": isContentOpen
  }, /*#__PURE__*/React.createElement("div", {
    className: styles.menuItemTitle
  }, /*#__PURE__*/React.createElement(_Icon.Icon, {
    iconName: icon,
    className: styles.iconWrapper
  }), /*#__PURE__*/React.createElement("div", {
    className: styles.title
  }, heading)), /*#__PURE__*/React.createElement("div", {
    className: isContentOpen ? (0, _classnames.default)(styles.toggleButton, styles.toggleButtonOpen) : styles.toggleButton
  }, /*#__PURE__*/React.createElement(_Icon.Icon, {
    iconName: "ChevronDown"
  }))), isContentOpen && /*#__PURE__*/React.createElement("section", {
    className: styles.content
  }, children));
};

exports.AccordionMenuItem = AccordionMenuItem;