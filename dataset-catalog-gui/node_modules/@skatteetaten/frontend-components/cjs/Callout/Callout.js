"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Callout = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = require("@fluentui/react");

var _react2 = _interopRequireWildcard(require("react"));

var _IconButton = require("../IconButton");

var _Callout = require("./Callout.classNames");

var _Callout2 = require("./Callout.types");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
 * visibleName Callout (Utropsboks)
 */
class Callout extends _react2.PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      widthBtnLabel: '',
      target: undefined,
      isCalloutVisible: props.isCalloutVisible
    };
  }

  render() {
    const _this$props = this.props,
          {
      children,
      className,
      id
    } = _this$props,
          props = _objectWithoutProperties(_this$props, ["children", "className", "id"]);

    const styles = (0, _Callout.getClassNames)(props, this.state.widthBtnLabel);

    window.onclick = e => {
      if (e.target && e.target.parentElement !== this.state.target && e.target.parentElement.className.indexOf('ms-Button-textContainer') > -1 || e.target.className.indexOf('ms-Button-textContainer') > -1) {
        this.setState({
          target: e.target.parentElement,
          widthBtnLabel: window.getComputedStyle(e.target.parentElement).width
        });
      }
    };

    window.onresize = () => {
      if (this.state.target) {
        this.setState({
          //@ts-ignore
          widthBtnLabel: window.getComputedStyle(this.state.target).width
        });
      }
    };

    return /*#__PURE__*/_react2.default.createElement("div", {
      id: id,
      className: (0, _classnames.default)(styles.calloutWrapper, className)
    }, /*#__PURE__*/_react2.default.createElement(_react.Callout, _extends({}, props, {
      className: (0, _classnames.default)(styles.main, className),
      isBeakVisible: true
    }), children, /*#__PURE__*/_react2.default.createElement(_IconButton.IconButton, {
      "aria-label": "Lukk",
      icon: "Cancel",
      className: styles.closeButton,
      buttonSize: "small",
      onClick: props.onClose
    })));
  }

  _onDismiss() {
    this.setState({
      isCalloutVisible: false
    });

    if (this.props.autoDismiss) {
      this.props.onDismiss && this.props.onDismiss();
    }
  }

}

exports.Callout = Callout;

_defineProperty(Callout, "HELP", _Callout2.CalloutColor.HELP);

_defineProperty(Callout, "INFO", _Callout2.CalloutColor.INFO);

_defineProperty(Callout, "ERROR", _Callout2.CalloutColor.ERROR);

_defineProperty(Callout, "WARNING", _Callout2.CalloutColor.WARNING);

_defineProperty(Callout, "BASIC", _Callout2.CalloutColor.BASIC);

_defineProperty(Callout, "POS_TOP_CENTER", _react.DirectionalHint.topCenter);

_defineProperty(Callout, "POS_TOP_LEFT", _react.DirectionalHint.topLeftEdge);

_defineProperty(Callout, "POS_TOP_RIGHT", _react.DirectionalHint.topRightEdge);

_defineProperty(Callout, "POS_BOTTOM_CENTER", _react.DirectionalHint.bottomCenter);

_defineProperty(Callout, "POS_BOTTOM_LEFT", _react.DirectionalHint.bottomLeftEdge);

_defineProperty(Callout, "POS_BOTTOM_RIGHT", _react.DirectionalHint.bottomRightEdge);

_defineProperty(Callout, "defaultProps", {
  autoDismiss: true,
  color: Callout.HELP,
  directionalHint: Callout.POS_TOP_CENTER,
  doNotLayer: true,
  role: undefined,
  border: true
});