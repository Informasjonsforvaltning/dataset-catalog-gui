"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getClassNames = void 0;

var _mergeStyles = require("@fluentui/merge-styles");

var _react = require("@fluentui/react");

var _utils = require("../utils");

const getClassNames = props => {
  const palette = (0, _react.getTheme)().palette;
  const {
    linkGroup
  } = props;
  return (0, _mergeStyles.mergeStyleSets)({
    icon: {
      color: palette.skeColor.blue,
      fontSize: linkGroup ? _utils.FontSizes.medium : _utils.FontSizes.large,
      fontWeight: linkGroup ? _utils.FontWeights.bold : 'inherit',
      verticalAlign: linkGroup ? 'bottom' : 'middle',
      paddingLeft: linkGroup ? '0px' : '4px',
      paddingRight: linkGroup ? '10px' : '4px',
      borderBottom: 'none'
    },
    linkContainer: {
      margin: '0px',
      selectors: {
        ':hover>i': {
          color: linkGroup ? palette.skeColor.darkBlue : '',
          paddingLeft: '4px',
          paddingRight: linkGroup ? '6px' : '4px',
          transition: linkGroup ? '0.1s' : ''
        },
        ':hover>a': {
          backgroundColor: palette.skeColor.lightBlue
        }
      }
    },
    skipLink: {
      left: '-9999px',
      position: 'absolute',
      top: 'auto',
      opacity: 0,
      overflow: 'hidden',
      selectors: {
        '&:focus, &:active': {
          display: 'block',
          color: palette.skeColor.blackAlt,
          backgroundColor: '#fff',
          position: 'relative',
          left: 'auto',
          top: 'auto',
          height: 'auto',
          overflow: 'auto',
          textAlign: 'center',
          opacity: 1,
          padding: '12px 8px',
          outline: 'none'
        }
      }
    },
    iconLink: {
      color: palette.skeColor.blue,
      textDecoration: 'none',
      fontWeight: linkGroup ? _utils.FontWeights.bold : _utils.FontWeights.medium,
      borderBottom: `1px solid ${palette.skeColor.blue}`,
      selectors: {
        '&:hover': {
          color: palette.skeColor.darkBlue,
          borderBottom: '2px solid ' + palette.skeColor.darkBlue,
          backgroundColor: palette.skeColor.lightBlue
        },
        '&:focus': {
          color: palette.skeColor.darkBlue,
          borderBottom: '2px solid ' + palette.skeColor.darkBlue,
          backgroundColor: palette.skeColor.lightBlue,
          outline: 'none'
        }
      }
    }
  });
};

exports.getClassNames = getClassNames;