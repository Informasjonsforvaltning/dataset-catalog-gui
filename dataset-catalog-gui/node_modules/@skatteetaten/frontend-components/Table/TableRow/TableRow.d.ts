import React from 'react';
import { RowData } from '../Table.types';
export interface RowCustomClassNames {
    tableRow?: string;
    tableCell?: string;
    cellContent?: string;
    expandableContent?: string;
}
export interface TableRowProps<P> {
    rowIndex: number;
    /** Custom classNames for Ã¥ overskrive styling */
    customClassNames?: RowCustomClassNames;
    data: P;
    editableContent?: (data: P, onCloseRow: () => void, rowIndex: number) => React.ReactNode;
    editableRows: boolean | Array<number> | undefined;
    expandableContent?: (data: P, onCloseRow: () => void, rowIndex: number) => React.ReactNode;
    expandableModeActive: boolean;
    expandableRows: boolean | undefined;
    expandIconPlacement?: 'after' | 'before';
    columns: any;
    editModeActive: boolean;
    tableHasScroll: boolean;
    isEditableRowOpen: boolean;
    isExpandableRowOpen: boolean;
    openEditableOnRowClick?: boolean;
    onEditRow: (index?: number) => void;
    onExpandRow: (index?: number) => void;
    onCloseRow: () => void;
    openExpandableRowIndex: number | undefined;
    tableId: string;
    showRowSeparators: boolean;
    compactTable: boolean;
    sum: {
        text: string;
        colspan: number;
        total: number | string;
    } | undefined;
}
export declare const TableRow: <P extends RowData>(props: TableRowProps<P>) => JSX.Element;
export default TableRow;
