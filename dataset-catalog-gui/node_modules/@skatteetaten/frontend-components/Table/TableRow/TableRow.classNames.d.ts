export declare const getClassNames: (props: any, expandabledRowOpenWidth: any) => import("@fluentui/merge-styles").IProcessedStyleSet<{
    tableRow: {
        borderBox: string;
        verticalAlign: string;
        selectors: {
            '&.tableRowIsClickable': {
                selectors: {
                    ':hover': {
                        backgroundColor: string;
                    };
                };
            };
            '&.tableRowEditableAndOpen': {
                display: string;
            };
            '&.tableRowEditableAndClosed': {
                display: string;
            };
            '&.tableRowHasSeparator': {
                borderBottom: string;
            };
        };
    };
    expandableContent: {
        width: string;
        padding: string;
        boxSizing: string;
        position: string;
        zIndex: number;
    };
    tableCell: {
        fontWeight: string;
        padding: number;
        verticalAlign: string;
        selectors: {
            '&.tableCellAlignedRight': {
                justifyContent: string;
                textAlign: string;
            };
            '&.tableCellAlignedCenter': {
                justifyContent: string;
                textAlign: string;
            };
            '&.tableCellIsSum': {
                textAlign: string;
                padding: string;
            };
            '&.tableCellForExpandCollapseButton': {
                maxWidth: string;
                selectors: {
                    [x: string]: {
                        maxWidth: string;
                    };
                };
            };
            '&.tableCellIsEditableRowClosed': {
                borderBottom: string;
            };
            '&.tableCellAboveExpandedArea': {
                borderBottom: string;
                verticalAlign: string;
            };
            '&.tableCellHiddenOnMobile': {
                display: string;
                selectors: {
                    [x: string]: {
                        display: string;
                    };
                };
            };
            '&.tableCellHasSeparator': {
                borderBottom: string;
            };
        };
    };
    cellContent: {
        display: string;
        width: string;
        verticalAlign: string;
        boxSizing: string;
        fontSize: string;
        padding: string;
        textAlign: string;
        selectors: {
            '&.cellContentSmall': {
                padding: string;
            };
            '&.cellContentClickable': {
                paddingTop: string;
                paddingBottom: string;
                cursor: string;
            };
            '&.cellContentLarge': {
                padding: string;
            };
            '&.cellContentChildRow': {
                padding: string;
            };
            '&.cellContentAlignedRight': {
                textAlign: string;
            };
            '&.cellContentAlignedCenter': {
                textAlign: string;
            };
            '&.cellContentAboveExpandedArea': {
                alignItems: string;
            };
            '&.cellContentHideEdit': {
                minHeight: string;
            };
        };
    };
    expandButton: {};
    expandButtonIsActive: {};
    editButton: {
        width: string;
        height: string;
        margin: number;
        padding: number;
        border: string;
        background: string;
        boxSizing: string;
        fontSize: string;
        textAlign: string;
    };
    emptyTd: {
        borderBottom: string;
    };
}>;
