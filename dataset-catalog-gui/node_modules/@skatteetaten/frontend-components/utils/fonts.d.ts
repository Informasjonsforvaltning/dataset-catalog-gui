export declare enum FontSizes {
    mini = "0.625rem",
    xSmall = "0.75rem",
    small = "0.875rem",
    smallPlus = "0.9375rem",
    medium = "1rem",
    mediumPlus = "1.0625rem",
    icon = "1.25rem",
    large = "1.125rem",
    largePlus = "1.25rem",
    xLarge = "1.375rem",
    xxLarge = "1.875rem",
    superLarge = "2.625rem",
    mega = "4.25rem"
}
export declare enum LineHeightSizes {
    mini = "1.6",
    xSmall = "1.6666",
    small = "1.8525",
    smallPlus = "1.733",
    medium = "1.625",
    mediumPlus = "1.625",
    large = "1.6666",
    largePlus = "1.25rem",
    xLarge = "1.636",
    xxLarge = "1.6",
    superLarge = "1.524",
    mega = "1.4118"
}
export declare type FontSizeType = keyof typeof FontSizes;
export declare enum FontWeights {
    light = 100,
    semilight = 300,
    regular = 400,
    medium = 500,
    semibold = 600,
    bold = 700
}
export declare enum IconFontSizes {
    xSmall = "0.625rem",
    small = "0.75rem",
    medium = "1rem",
    large = "1.25rem",
    xlarge = "1.5rem",
    xxlarge = "2rem",
    mega = "2.5rem"
}
export declare const createFont: (size: FontSizes, weight: FontWeights, localeCode?: string) => {
    fontFamily: string;
    MozOsxFontSmoothing: string;
    WebkitFontSmoothing: string;
    fontSize: FontSizes;
    fontWeight: FontWeights;
};
export declare const Fonts: {
    tiny: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    xSmall: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    small: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    smallPlus: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    medium: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    mediumPlus: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    large: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    xLarge: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    xxLarge: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    superLarge: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
    mega: {
        fontFamily: string;
        MozOsxFontSmoothing: string;
        WebkitFontSmoothing: string;
        fontSize: FontSizes;
        fontWeight: FontWeights;
    };
};
