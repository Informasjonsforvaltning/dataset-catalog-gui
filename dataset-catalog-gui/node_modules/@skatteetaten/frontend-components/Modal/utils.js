import { useEffect } from 'react';
export const getModalAnchor = shadowRootNode => {
  const modalAnchorInShadowDom = shadowRootNode?.getElementById('modal-wrapper');
  const modalAnchorInLightDom = document.getElementById('modal-wrapper');
  return modalAnchorInShadowDom ?? modalAnchorInLightDom ?? document.body;
};
export const getSkeBasisStylingWrapper = rootNode => {
  let ltrWrapper;
  const ltrDomElements = rootNode.querySelectorAll('[dir="ltr"]');

  for (let i = 0; i < ltrDomElements.length; i++) {
    if (ltrDomElements[i].className.includes('body-')) {
      ltrWrapper = ltrDomElements[i];
    }
  }

  return ltrWrapper;
};
export const createModalDomPlacement = (setFlag, shadowRootNode) => {
  const modalAnchorId = 'modal-wrapper';
  const rootNode = shadowRootNode ?? document;

  if (rootNode.getElementById(modalAnchorId)) {
    setFlag(true);
    return;
  } else {
    const skeBasisStylingWrapper = getSkeBasisStylingWrapper(rootNode);
    const modalAnchor = document.createElement('div');
    modalAnchor.id = modalAnchorId;
    const parent = skeBasisStylingWrapper ?? shadowRootNode ?? document.body;
    parent.appendChild(modalAnchor);
    setFlag(true);
  }
};
export const useEscOnPress = (ref, onClose) => {
  useEffect(() => {
    const onKeyDown = event => {
      if (ref == null) {
        return;
      }

      if (event.code === 'Escape' && onClose) {
        onClose(ref);
      }
    };

    if (ref) {
      window.addEventListener('keydown', onKeyDown, false);
    }

    return function cleanup() {
      if (window) {
        window.removeEventListener('keydown', onKeyDown);
      }
    };
  }, [ref, onClose]);
};