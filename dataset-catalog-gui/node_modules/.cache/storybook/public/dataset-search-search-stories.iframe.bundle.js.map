{"version":3,"file":"dataset-search-search-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AARA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAWA;AAMA;AAMA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AARA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AAEA;AAiBA;AAoBA;AAWA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;;AAGA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACbA;AACA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAPA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AAQA;AAYA;AAcA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAMA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://dataset-catalog-gui/./src/components/dataset-search/search.stories.tsx","webpack://dataset-catalog-gui/./src/components/button/index.tsx","webpack://dataset-catalog-gui/./src/components/button/styled.ts","webpack://dataset-catalog-gui/./src/components/dataset-search/index.tsx","webpack://dataset-catalog-gui/./src/components/dataset-search/styled.ts","webpack://dataset-catalog-gui/./src/components/icon/index.tsx","webpack://dataset-catalog-gui/./src/components/icon/styled.ts","webpack://dataset-catalog-gui/./src/components/input-box/index.tsx","webpack://dataset-catalog-gui/./src/components/input-box/styled.ts","webpack://dataset-catalog-gui/./src/utils/language/localization.ts","webpack://dataset-catalog-gui/./src/utils/language/nb.ts","webpack://dataset-catalog-gui/./src/utils/styles/break-point.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport Search from '.';\\n\\nexport default {\\n  title: 'Search',\\n  component: Search,\\n} as ComponentMeta<typeof Search>;\\n\\nconst Template: ComponentStory<typeof Search> = args => <Search {...args} />;\\n\\nexport const FirstStory = Template.bind({});\\nFirstStory.args = {};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FirstStory\":{\"startLoc\":{\"col\":48,\"line\":10},\"endLoc\":{\"col\":76,\"line\":10},\"startBody\":{\"col\":48,\"line\":10},\"endBody\":{\"col\":76,\"line\":10}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport Search from '.';\n\nexport default {\n  title: 'Search',\n  component: Search,\n} as ComponentMeta<typeof Search>;\n\nconst Template: ComponentStory<typeof Search> = args => <Search {...args} />;\n\nexport const FirstStory = Template.bind({});\nFirstStory.args = {};\n\n\n\nFirstStory.parameters = { storySource: { source: \"args => <Search {...args} />\" }, ...FirstStory.parameters };","import React, { FC, ReactElement } from 'react';\n\nimport SC from './styled';\n\ninterface Props {\n  label: string;\n  startIcon?: ReactElement;\n  endIcon?: ReactElement;\n  className?: string;\n}\n\nconst Button: FC<Props> = ({ label, startIcon, endIcon, className }) => {\n  return (\n    <SC.ButtonContainer className={className}>\n      {startIcon ? <SC.StartIcon>{startIcon}</SC.StartIcon> : <></>}\n      <SC.Button>{label}</SC.Button>\n      {endIcon ? <SC.EndIcon>{endIcon}</SC.EndIcon> : <></>}\n    </SC.ButtonContainer>\n  );\n};\n\nexport { Props };\nexport default Button;\n","import { Colour, theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n\n  font-weight: ${theme.fontWeight('FW400')};\n  font-size: ${theme.fontSize('FS16')};\n  line-height: ${theme.spacing('S16')};\n  background: none;\n  border: none;\n  color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n`;\n\nconst StartIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-right: ${theme.spacing('S8')};\n`;\n\nconst EndIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: ${theme.spacing('S8')};\n`;\n\nconst ButtonContainer = styled.span`\n  height: ${theme.spacing('S56')};\n  border-radius: ${theme.spacing('S4')};\n  padding: ${theme.spacing('S16')} ${theme.spacing('S24')};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: ${theme.colour(Colour.BLUE, 'B60')};\n\n  :hover {\n    color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n    background-color: ${theme.colour(Colour.NEUTRAL, 'N70')};\n    > button {\n      color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n      background-color: ${theme.colour(Colour.NEUTRAL, 'N70')};\n    }\n    & * {\n      stroke: ${theme.colour(Colour.NEUTRAL, 'N0')};\n    }\n  }\n`;\n\nexport default { Button, ButtonContainer, StartIcon, EndIcon };\n","import React, { FC } from 'react';\nimport { localization } from '../../utils/language/localization';\nimport Icon from '../icon';\nimport SC from './styled';\n\nconst Search: FC = () => {\n  return (\n    <SC.Search>\n      <SC.StyledInputBox label={localization.searchForDataset} />\n      <SC.SearchButton label={localization.btnFilterOnPerson} endIcon={<Icon name='chevronDownStroke' />} />\n      <SC.SearchButton label={localization.btnFilterOnStatus} endIcon={<Icon name='chevronDownStroke' />} />\n    </SC.Search>\n  );\n};\n\nexport default Search;\n","import styled from 'styled-components';\nimport Breakpoint from '../../utils/styles/break-point';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Button from '../button';\nimport InputBox from '../input-box';\n\nconst Search = styled.span`\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  span:nth-child(2) {\n    margin-right: ${theme.spacing('S10')};\n  }\n\n  ${Breakpoint.MEDIUM} {\n    flex-direction: column;\n    span:nth-child(2) {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst SearchButton = styled(Button)`\n  background-color: ${theme.colour(Colour.BLUE, 'B30')};\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n  min-width: 220px;\n  margin-left: ${theme.spacing('S10')};\n\n  & button {\n    color: ${theme.colour(Colour.BLUE, 'B60')};\n  }\n\n  & * {\n    stroke: ${theme.colour(Colour.NEUTRAL, 'N70')};\n  }\n\n  ${Breakpoint.MEDIUM} {\n    margin: ${theme.spacing('S10')} 0 0 0;\n    width: 100%;\n  }\n`;\n\nconst StyledInputBox = styled(InputBox)`\n  width: 100%;\n  margin-right: ${theme.spacing('S10')};\n  border-radius: ${theme.spacing('S4')};\n  border: 1px solid ${theme.colour(Colour.NEUTRAL, 'N60')};\n\n  ${Breakpoint.MEDIUM} {\n    margin: 0;\n  }\n`;\n\nexport default { Search, SearchButton, StyledInputBox };\n","/**\n * Check all available icon name and className here: https://github.com/fellesdatakatalog/fdk-kit/tree/develop/packages/icons/src/assets/svg\n */\n\nimport { SvgIconTypes } from '@fellesdatakatalog/icons';\nimport React, { FC } from 'react';\nimport SC from './styled';\n\ninterface Props {\n  name: SvgIconTypes;\n  className?: string;\n}\n\nconst Icon: FC<Props> = ({ name, className }) => {\n  return <SC.Icon\n    className={className}\n    name={name as SvgIconTypes}\n  />\n};\n\nexport default Icon;\n","import styled from 'styled-components';\nimport SvgIcon from '@fellesdatakatalog/icons';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nconst Icon = styled(SvgIcon)`\n  width: ${theme.spacing('S24')};\n  height: ${theme.spacing('S24')};\n\n  & * {\n    stroke: ${theme.colour(Colour.NEUTRAL, 'N0')};\n  }\n`;\n\nexport default { Icon };\n","import React, { FC } from 'react';\nimport SC from './styled';\n\ninterface Props {\n  label: string;\n  className?: string;\n}\n\nconst InputBox: FC<Props> = ({ className, label = ' ' }) => {\n  return (\n    <SC.TextField className={className}>\n      <SC.InputPlaceHolder>{label}</SC.InputPlaceHolder>\n      <SC.Input />\n    </SC.TextField>\n  );\n};\n\nexport default InputBox;\n","import { Colour, theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst TextField = styled.div`\n  height: ${theme.spacing('S56')};\n  background-color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst InputPlaceHolder = styled.p`\n  margin-left: ${theme.spacing('S16')};\n  font-weight: ${theme.fontWeight('FW400')};\n  font-size: ${theme.fontSize('FS20')};\n\n  background-color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n  padding-right: ${theme.spacing('S4')};\n  line-height: ${theme.spacing('S24')};\n  border-radius: ${theme.spacing('S48')};\n  color: ${theme.colour(Colour.NEUTRAL, 'N50')};\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  margin: 0 ${theme.spacing('S16')} 0 ${theme.spacing('S16')};\n  width: 684px;\n  font-size: ${theme.fontSize('FS20')};\n\n  background: none;\n  border: 0;\n  :focus {\n    outline: none;\n    border: 0;\n  }\n`;\n\nexport default { TextField, InputPlaceHolder, Input };\n","import LocalizedStrings, { LocalizedStringsMethods } from 'react-localization';\nimport { nb } from './nb';\n\ninterface LocaleStrings extends LocalizedStringsMethods {\n  [key: string]: any;\n}\n\nexport const localization: LocaleStrings = new LocalizedStrings({\n  nb: { ...nb },\n});\n\nlocalization.setLanguage('nb');\n","export const nb = {\n  allCatalogs: 'Alle kataloger',\n\n  btnAddNewDataset: 'Legg til ny datasettbeskrivelse',\n  btnFilterOnPerson: 'Filtrer på person',\n  btnFilterOnStatus: 'Filtrer på status',\n  btnHostSpecification: 'Høst spesifikasjon fra katalog',\n\n  catalogType: 'Datasettkatalog',\n\n  searchForDataset: 'Søk etter datasettbeskrivelse',\n\n  tagApproved: 'Godkjent',\n  tagDraft: 'Utkast',\n  tagPublished: 'Publisert',\n  tagExPublished: 'EksPublisert',\n  tagNonEditable: 'Ikke redigerbar',\n  tagUnderReview: 'Til høring',\n\n  dcatKeywords: {\n    mandatory: 'Obligatorisk',\n    recommended: 'Anbefalt',\n  },\n\n  sectionTitle: {\n    titleAndDescription: 'Tittel og beskrivelse',\n    conceptAndSearchTerms: 'Begrep og søkeord',\n  },\n\n  sectionErrorMessage: \"Ett eller flere obligatoriske felt er ikke fylt ut\"\n};\n","const Breakpoint = {\n  SMALL: '@media (max-width: 600px)',\n  MEDIUM: '@media (max-width: 900px)',\n  LARGE: '@media (max-width: 1200px)',\n  X_Large: '@media (max-width: 1500px)',\n};\n\nexport default Breakpoint;\n"],"names":[],"sourceRoot":""}