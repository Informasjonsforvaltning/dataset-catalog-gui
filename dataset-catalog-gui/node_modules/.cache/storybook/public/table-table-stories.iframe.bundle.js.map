{"version":3,"file":"table-table-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAOA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACtCA;AAEA;AACA;AACA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAPA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAEA;AAEA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AARA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACTA;AACA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AAOA;AAOA;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAVA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AAOA;AAAA;AAAA;AAAA","sources":["webpack://dataset-catalog-gui/./src/components/table/table-header/table-headre.stories.tsx","webpack://dataset-catalog-gui/./src/components/table/table.stories.tsx","webpack://dataset-catalog-gui/./src/components/table/index.tsx","webpack://dataset-catalog-gui/./src/components/table/styled.ts","webpack://dataset-catalog-gui/./src/components/table/table-body/index.tsx","webpack://dataset-catalog-gui/./src/components/table/table-body/styled.ts","webpack://dataset-catalog-gui/./src/components/table/table-header/header-cell/index.tsx","webpack://dataset-catalog-gui/./src/components/table/table-header/header-cell/styled.ts","webpack://dataset-catalog-gui/./src/components/table/table-header/index.tsx","webpack://dataset-catalog-gui/./src/components/table/table-header/styled.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport TableHeader, { Props as HeaderProps } from '.';\\nimport { Props as CellProps } from './header-cell';\\nimport Icon from '../../icon';\\n\\nexport default {\\n  title: 'Table/TableHeader',\\n  component: TableHeader,\\n} as ComponentMeta<typeof TableHeader>;\\n\\nconst Template: ComponentStory<typeof TableHeader> = (args: HeaderProps<CellProps>) => <TableHeader {...args} />;\\n\\nexport const Header = Template.bind({});\\nHeader.args = {\\n  cols: [\\n    { title: 'Tittel', icon: <Icon name='listUnsortedStroke' />, width: '30%' },\\n    { title: 'Sist endret av', icon: <Icon name='listUnsortedStroke' />, width: '22%' },\\n    { title: 'Sist endret', icon: <Icon name='listUnsortedStroke' />, width: '22%' },\\n    { title: 'Versjon', icon: <Icon name='listUnsortedStroke' />, width: '10%' },\\n    { title: 'Status', icon: <Icon name='listUnsortedStroke' />, width: '16%' },\\n  ],\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Header\":{\"startLoc\":{\"col\":53,\"line\":12},\"endLoc\":{\"col\":112,\"line\":12},\"startBody\":{\"col\":53,\"line\":12},\"endBody\":{\"col\":112,\"line\":12}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport TableHeader, { Props as HeaderProps } from '.';\nimport { Props as CellProps } from './header-cell';\nimport Icon from '../../icon';\n\nexport default {\n  title: 'Table/TableHeader',\n  component: TableHeader,\n} as ComponentMeta<typeof TableHeader>;\n\nconst Template: ComponentStory<typeof TableHeader> = (args: HeaderProps<CellProps>) => <TableHeader {...args} />;\n\nexport const Header = Template.bind({});\nHeader.args = {\n  cols: [\n    { title: 'Tittel', icon: <Icon name='listUnsortedStroke' />, width: '30%' },\n    { title: 'Sist endret av', icon: <Icon name='listUnsortedStroke' />, width: '22%' },\n    { title: 'Sist endret', icon: <Icon name='listUnsortedStroke' />, width: '22%' },\n    { title: 'Versjon', icon: <Icon name='listUnsortedStroke' />, width: '10%' },\n    { title: 'Status', icon: <Icon name='listUnsortedStroke' />, width: '16%' },\n  ],\n};\n\n\n\nHeader.parameters = { storySource: { source: \"(args: HeaderProps<CellProps>) => <TableHeader {...args} />\" }, ...Header.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport Table from './';\\nimport * as TableHeaderStory from './table-header/table-headre.stories';\\nimport * as TableRowStory from './table-row/table-row.stories';\\nimport { Props as RowProps } from './table-row';\\nimport { Props as RowCellProps } from './table-row/row-cell';\\n\\nexport default {\\n  title: 'Table/Table',\\n  component: Table,\\n} as ComponentMeta<typeof Table>;\\n\\nconst Template: ComponentStory<typeof Table> = args => <Table {...args} />;\\n\\nexport const DatasetsTable = Template.bind({});\\nDatasetsTable.args = {\\n  ...TableHeaderStory.Header.args,\\n  rows: [\\n    TableRowStory.DatasetsTableRow1.args as RowProps<RowCellProps>,\\n    TableRowStory.DatasetsTableRow2.args as RowProps<RowCellProps>,\\n    TableRowStory.DatasetsTableRow3.args as RowProps<RowCellProps>,\\n    TableRowStory.DatasetsTableRow4.args as RowProps<RowCellProps>,\\n    TableRowStory.DatasetsTableRow5.args as RowProps<RowCellProps>,\\n    TableRowStory.DatasetsTableRow6.args as RowProps<RowCellProps>,\\n  ],\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"DatasetsTable\":{\"startLoc\":{\"col\":47,\"line\":14},\"endLoc\":{\"col\":74,\"line\":14},\"startBody\":{\"col\":47,\"line\":14},\"endBody\":{\"col\":74,\"line\":14}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport Table from './';\nimport * as TableHeaderStory from './table-header/table-headre.stories';\nimport * as TableRowStory from './table-row/table-row.stories';\nimport { Props as RowProps } from './table-row';\nimport { Props as RowCellProps } from './table-row/row-cell';\n\nexport default {\n  title: 'Table/Table',\n  component: Table,\n} as ComponentMeta<typeof Table>;\n\nconst Template: ComponentStory<typeof Table> = args => <Table {...args} />;\n\nexport const DatasetsTable = Template.bind({});\nDatasetsTable.args = {\n  ...TableHeaderStory.Header.args,\n  rows: [\n    TableRowStory.DatasetsTableRow1.args as RowProps<RowCellProps>,\n    TableRowStory.DatasetsTableRow2.args as RowProps<RowCellProps>,\n    TableRowStory.DatasetsTableRow3.args as RowProps<RowCellProps>,\n    TableRowStory.DatasetsTableRow4.args as RowProps<RowCellProps>,\n    TableRowStory.DatasetsTableRow5.args as RowProps<RowCellProps>,\n    TableRowStory.DatasetsTableRow6.args as RowProps<RowCellProps>,\n  ],\n};\n\n\n\nDatasetsTable.parameters = { storySource: { source: \"args => <Table {...args} />\" }, ...DatasetsTable.parameters };","import React, { FC } from 'react';\n\nimport SC from './styled';\nimport TableBody from './table-body';\nimport TableHeader, { Props as HeaderProps } from './table-header';\nimport { Props as HeadCellProps } from './table-header/header-cell';\nimport { Props as RowProps } from './table-row';\nimport { Props as RowCellProps } from './table-row/row-cell';\n\ninterface Props extends HeaderProps<HeadCellProps> {\n  rows: RowProps<RowCellProps>[];\n}\n\nconst Table: FC<Props> = ({ cols, rows }) => {\n  return (\n    <SC.Table>\n      <TableHeader cols={cols ?? []} />\n      <TableBody rows={rows} />\n    </SC.Table>\n  );\n};\n\nexport default Table;\n","import { Colour, theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  width: 100%;\n  background-color: ${theme.colour(Colour.CYAN, 'C20')};\n  margin-top: ${theme.spacing('S40')};\n`;\n\nexport default { Table };\n","import React, { FC } from 'react';\n\nimport TableRow, { Props as RowProps } from '../table-row';\nimport { Props as RowCellProps } from '../table-row/row-cell';\nimport SC from './styled';\n\ninterface Props {\n  rows: RowProps<RowCellProps>[];\n}\n\nconst TableBody: FC<Props> = ({ rows }) => {\n  return (\n    <SC.TableBody>\n      {rows.map((row, i) => (\n        <TableRow key={i} {...row} />\n      ))}\n    </SC.TableBody>\n  );\n};\n\nexport default TableBody;\n","import { theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst TableBody = styled.tbody`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${theme.spacing('S40')};\n`;\n\nexport default { TableBody };\n","import React, { FC, ReactElement } from 'react';\nimport SC from './styled';\n\ninterface Props {\n  title: string;\n  icon?: ReactElement;\n  width: string;\n}\n\nconst HeaderCell: FC<Props> = ({ title, icon, width }) => (\n  <SC.Cell style={{ width: width }}>\n    <SC.Title>{title}</SC.Title>\n    <SC.Icon>{icon ?? undefined}</SC.Icon>\n  </SC.Cell>\n);\n\nexport { Props };\nexport default HeaderCell;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nconst Cell = styled.th`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-left: ${theme.spacing('S4')};\n`;\n\nconst Title = styled.p`\n  font-weight: ${theme.fontWeight('FW700')};\n  font-size: ${theme.fontSize('FS16')};\n  line-height: ${theme.spacing('S24')};\n  color: ${theme.colour(Colour.NEUTRAL, 'N60')};\n`;\n\nconst Icon = styled.svg`\n  width: ${theme.spacing('S24')};\n  height: ${theme.spacing('S24')};\n  padding-left: ${theme.spacing('S4')};\n`;\n\nexport default { Cell, Title, Icon };\n","import React, { FC } from 'react';\nimport SC from './styled';\nimport HeaderCell, { Props as CellProps } from './header-cell';\n\ninterface Props<T> {\n  cols: T[];\n}\n\nconst TableHeader: FC<Props<CellProps>> = ({ cols }) => {\n  const headRow = (\n    <SC.TableHeadRow>\n      {cols.map((col, i) => (\n        <HeaderCell key={i} title={col.title} icon={col.icon} width={col.width} />\n      ))}\n    </SC.TableHeadRow>\n  );\n\n  return <SC.TableHead>{headRow}</SC.TableHead>;\n};\n\nexport { Props };\nexport default TableHeader;\n","import { theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst TableHead = styled.thead``;\n\nconst TableHeadRow = styled.tr`\n  display: flex;\n  flex-direction: row;\n  height: ${theme.spacing('S48')};\n  padding: 0 ${theme.spacing('S10')};\n`;\n\nexport default { TableHead, TableHeadRow };\n"],"names":[],"sourceRoot":""}