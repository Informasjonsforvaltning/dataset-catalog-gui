{"version":3,"file":"button-button-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACjDA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AARA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAWA;AAMA;AAMA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;;AAGA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAEA;AASA;AAAA;AAAA","sources":["webpack://dataset-catalog-gui/./src/components/button/button.stories.tsx","webpack://dataset-catalog-gui/./src/components/button/index.tsx","webpack://dataset-catalog-gui/./src/components/button/styled.ts","webpack://dataset-catalog-gui/./src/components/icon/index.tsx","webpack://dataset-catalog-gui/./src/components/icon/styled.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport React from 'react';\\nimport Button, { Props as ButtonProps } from '.';\\nimport Icon from '../icon';\\n\\nexport default {\\n  title: 'Button',\\n  component: Button,\\n} as ComponentMeta<typeof Button>;\\n\\nconst Template: ComponentStory<typeof Button> = (args: ButtonProps) => <Button {...args} />;\\n\\nexport const AddDataset = Template.bind({});\\nAddDataset.args = {\\n  label: 'Legg til ny datasettbeskrivelse',\\n  startIcon: <Icon name='circlePlusStroke' />,\\n};\\n\\nexport const HostSpecification = Template.bind({});\\nHostSpecification.args = {\\n  label: 'Høst spesifikasjon fra katalog',\\n  startIcon: <Icon name='circlePlusStroke' />,\\n};\\n\\nexport const FilterOnPerson = Template.bind({});\\nFilterOnPerson.args = {\\n  label: 'Filtrer på person',\\n  endIcon: <Icon name='chevronDownStroke' />,\\n};\\n\\nexport const FilterOnStatus = Template.bind({});\\nFilterOnStatus.args = {\\n  label: 'Filtrer på status',\\n  endIcon: <Icon name='chevronDownStroke' />,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"AddDataset\":{\"startLoc\":{\"col\":48,\"line\":11},\"endLoc\":{\"col\":91,\"line\":11},\"startBody\":{\"col\":48,\"line\":11},\"endBody\":{\"col\":91,\"line\":11}},\"HostSpecification\":{\"startLoc\":{\"col\":48,\"line\":11},\"endLoc\":{\"col\":91,\"line\":11},\"startBody\":{\"col\":48,\"line\":11},\"endBody\":{\"col\":91,\"line\":11}},\"FilterOnPerson\":{\"startLoc\":{\"col\":48,\"line\":11},\"endLoc\":{\"col\":91,\"line\":11},\"startBody\":{\"col\":48,\"line\":11},\"endBody\":{\"col\":91,\"line\":11}},\"FilterOnStatus\":{\"startLoc\":{\"col\":48,\"line\":11},\"endLoc\":{\"col\":91,\"line\":11},\"startBody\":{\"col\":48,\"line\":11},\"endBody\":{\"col\":91,\"line\":11}}};\n    \nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport React from 'react';\nimport Button, { Props as ButtonProps } from '.';\nimport Icon from '../icon';\n\nexport default {\n  title: 'Button',\n  component: Button,\n} as ComponentMeta<typeof Button>;\n\nconst Template: ComponentStory<typeof Button> = (args: ButtonProps) => <Button {...args} />;\n\nexport const AddDataset = Template.bind({});;\nAddDataset.args = {\n  label: 'Legg til ny datasettbeskrivelse',\n  startIcon: <Icon name='circlePlusStroke' />,\n};\n\nexport const HostSpecification = Template.bind({});;\nHostSpecification.args = {\n  label: 'Høst spesifikasjon fra katalog',\n  startIcon: <Icon name='circlePlusStroke' />,\n};\n\nexport const FilterOnPerson = Template.bind({});;\nFilterOnPerson.args = {\n  label: 'Filtrer på person',\n  endIcon: <Icon name='chevronDownStroke' />,\n};\n\nexport const FilterOnStatus = Template.bind({});\nFilterOnStatus.args = {\n  label: 'Filtrer på status',\n  endIcon: <Icon name='chevronDownStroke' />,\n};\n\n\n\nAddDataset.parameters = { storySource: { source: \"(args: ButtonProps) => <Button {...args} />\" }, ...AddDataset.parameters };\nHostSpecification.parameters = { storySource: { source: \"(args: ButtonProps) => <Button {...args} />\" }, ...HostSpecification.parameters };\nFilterOnPerson.parameters = { storySource: { source: \"(args: ButtonProps) => <Button {...args} />\" }, ...FilterOnPerson.parameters };\nFilterOnStatus.parameters = { storySource: { source: \"(args: ButtonProps) => <Button {...args} />\" }, ...FilterOnStatus.parameters };","import React, { FC, ReactElement } from 'react';\n\nimport SC from './styled';\n\ninterface Props {\n  label: string;\n  startIcon?: ReactElement;\n  endIcon?: ReactElement;\n  className?: string;\n}\n\nconst Button: FC<Props> = ({ label, startIcon, endIcon, className }) => {\n  return (\n    <SC.ButtonContainer className={className}>\n      {startIcon ? <SC.StartIcon>{startIcon}</SC.StartIcon> : <></>}\n      <SC.Button>{label}</SC.Button>\n      {endIcon ? <SC.EndIcon>{endIcon}</SC.EndIcon> : <></>}\n    </SC.ButtonContainer>\n  );\n};\n\nexport { Props };\nexport default Button;\n","import { Colour, theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n\n  font-weight: ${theme.fontWeight('FW400')};\n  font-size: ${theme.fontSize('FS16')};\n  line-height: ${theme.spacing('S16')};\n  background: none;\n  border: none;\n  color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n`;\n\nconst StartIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-right: ${theme.spacing('S8')};\n`;\n\nconst EndIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: ${theme.spacing('S8')};\n`;\n\nconst ButtonContainer = styled.span`\n  height: ${theme.spacing('S56')};\n  border-radius: ${theme.spacing('S4')};\n  padding: ${theme.spacing('S16')} ${theme.spacing('S24')};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: ${theme.colour(Colour.BLUE, 'B60')};\n\n  :hover {\n    color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n    background-color: ${theme.colour(Colour.NEUTRAL, 'N70')};\n    > button {\n      color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n      background-color: ${theme.colour(Colour.NEUTRAL, 'N70')};\n    }\n    & * {\n      stroke: ${theme.colour(Colour.NEUTRAL, 'N0')};\n    }\n  }\n`;\n\nexport default { Button, ButtonContainer, StartIcon, EndIcon };\n","/**\n * Check all available icon name and className here: https://github.com/fellesdatakatalog/fdk-kit/tree/develop/packages/icons/src/assets/svg\n */\n\nimport { SvgIconTypes } from '@fellesdatakatalog/icons';\nimport React, { FC } from 'react';\nimport SC from './styled';\n\ninterface Props {\n  name: SvgIconTypes;\n  className?: string;\n}\n\nconst Icon: FC<Props> = ({ name, className }) => {\n  return <SC.Icon\n    className={className}\n    name={name as SvgIconTypes}\n  />\n};\n\nexport default Icon;\n","import styled from 'styled-components';\nimport SvgIcon from '@fellesdatakatalog/icons';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nconst Icon = styled(SvgIcon)`\n  width: ${theme.spacing('S24')};\n  height: ${theme.spacing('S24')};\n\n  & * {\n    stroke: ${theme.colour(Colour.NEUTRAL, 'N0')};\n  }\n`;\n\nexport default { Icon };\n"],"names":[],"sourceRoot":""}