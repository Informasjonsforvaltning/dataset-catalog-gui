{"version":3,"file":"breadcrumbs-breadcrumbs-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AAhCA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AAEA;AAWA;AAaA;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;;;;;;;;;;;;;;ACHA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;ACXA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAMA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sources":["webpack://dataset-catalog-gui/./src/components/breadcrumbs/breadcrumbs.stories.tsx","webpack://dataset-catalog-gui/./src/components/breadcrumbs/index.tsx","webpack://dataset-catalog-gui/./src/components/breadcrumbs/styled.ts","webpack://dataset-catalog-gui/./src/router/routes.ts","webpack://dataset-catalog-gui/./src/utils/constants/enums.ts","webpack://dataset-catalog-gui/./src/utils/constants/env-validator.ts","webpack://dataset-catalog-gui/./src/utils/constants/env.ts","webpack://dataset-catalog-gui/./src/utils/language/localization.ts","webpack://dataset-catalog-gui/./src/utils/language/nb.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport Breadcrumbs from '.';\\n\\nexport default {\\n  title: 'Breadcrumbs',\\n  component: Breadcrumbs,\\n} as ComponentMeta<typeof Breadcrumbs>;\\n\\nconst Template: ComponentStory<typeof Breadcrumbs> = args => <Breadcrumbs {...args} />;\\n\\nexport const DatasetsCatalog = Template.bind({});\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"DatasetsCatalog\":{\"startLoc\":{\"col\":53,\"line\":10},\"endLoc\":{\"col\":86,\"line\":10},\"startBody\":{\"col\":53,\"line\":10},\"endBody\":{\"col\":86,\"line\":10}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport Breadcrumbs from '.';\n\nexport default {\n  title: 'Breadcrumbs',\n  component: Breadcrumbs,\n} as ComponentMeta<typeof Breadcrumbs>;\n\nconst Template: ComponentStory<typeof Breadcrumbs> = args => <Breadcrumbs {...args} />;\n\nexport const DatasetsCatalog = Template.bind({});\n\n\n\nDatasetsCatalog.parameters = { storySource: { source: \"args => <Breadcrumbs {...args} />\" }, ...DatasetsCatalog.parameters };","import React, { FC, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { routes } from '../../router/routes';\nimport env from '../../utils/constants/env';\nimport { localization } from '../../utils/language/localization';\nimport SC from './styled';\n\nconst { FDK_REGISTRATION_BASE_URI } = env;\n\nconst Breadcrumbs: FC = () => {\n  const [datasetId, setDatasetId] = useState('');\n\n  const params = useParams();\n  if (params.datasetId && params.datasetId !== datasetId) setDatasetId(params.datasetId);\n  const activeStyle = { textDecoration: 'none' };\n\n  return (\n    <SC.BreadcrumbsNav>\n      <span>\n        <SC.Link to={FDK_REGISTRATION_BASE_URI}>{localization.allCatalogs}</SC.Link>\n        <span>\n          <SC.CrumbDivider>{'>'}</SC.CrumbDivider>\n          <SC.Link\n            to={`/${routes.home.replace(':catalogId', params.catalogId?.toString() ?? '')}`}\n            style={datasetId ? undefined : activeStyle}\n            onClick={() => setDatasetId('')}\n          >\n            {localization.catalogType}\n          </SC.Link>\n        </span>\n        {datasetId ? (\n          <span>\n            <SC.CrumbDivider>{'>'}</SC.CrumbDivider>\n            <SC.Link to={`/${routes.home}/${params.datasetId}`} style={datasetId ? activeStyle : undefined}>\n              {datasetId}\n            </SC.Link>\n          </span>\n        ) : undefined}\n      </span>\n    </SC.BreadcrumbsNav>\n  );\n};\n\nexport default Breadcrumbs;\n","import { Link as RRDLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nconst BreadcrumbsNav = styled.nav`\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 1140px;\n  margin: 0 auto;\n  padding: ${theme.spacing('S16')} ${theme.spacing('S16')} 0 ${theme.spacing('S16')};\n  overflow-wrap: break-word;\n`;\n\nconst Link = styled(RRDLink)`\n  text-decoration: underline;\n  font-style: normal;\n  font-weight: ${theme.fontWeight('FW400')};\n  font-size: ${theme.fontSize('FS16')};\n  line-height: ${theme.spacing('S24')};\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst CrumbDivider = styled.span`\n  height: ${theme.spacing('S8')};\n  width: ${theme.spacing('S4')};\n  margin: 0 ${theme.spacing('S10')} 0 ${theme.spacing('S10')};\n`;\n\nexport default { BreadcrumbsNav, Link, CrumbDivider };\n","export const routes = {\n  home: 'dataset-catalogs/:catalogId/datasets',\n  dataset: ':datasetId',\n};\n","export enum Namespace {\n  DEVELOPMENT = \"development\",\n  STAGING = \"staging\",\n  DEMO = \"demo\",\n  PRODUCTION = \"prod\",\n}\n","import type { EnvironmentVariables } from '../types';\n\nfunction assertIsDefined<T>(key: string, value: T): asserts value is NonNullable<T> {\n  if (value === undefined || value === null) {\n    throw new Error(`Expected ${key} to be defined, but received ${value}`);\n  }\n}\n\nexport const validateEnv = (env: EnvironmentVariables): EnvironmentVariables => {\n  Object.entries(env).forEach(([key, value]) => assertIsDefined(key, value));\n  return env;\n};\n","import { validateEnv } from './env-validator';\n\nimport { Namespace } from '../constants/enums';\n\nexport default validateEnv(\n  (window as any).env ?? {\n    NAMESPACE: Namespace.PRODUCTION,\n    FDK_BASE_URI: 'https://demo.fellesdatakatalog.digdir.no',\n    SSO_HOST: 'https://sso.demo.fellesdatakatalog.digdir.no',\n    SKE_THEME_PROFILE: '910244132',\n    FDK_REGISTRATION_BASE_URI: 'https://registrering.demo.fellesdatakatalog.digdir.no',\n    ADMIN_GUI_BASE_URI: 'https://admin.demo.fellesdatakatalog.digdir.no',\n    ORGANIZATION_API_HOST: 'https://organization-catalog.demo.fellesdatakatalog.digdir.no',\n    SEARCH_FULLTEXT_HOST: 'https://search.demo.fellesdatakatalog.digdir.no',\n    DATASERVICE_CATALOG_BASE_URI: 'https://dataservice-catalog.demo.fellesdatakatalog.digdir.no',\n    CONCEPT_REGISTRATION_HOST: 'https://registrering-begrep.demo.fellesdatakatalog.digdir.no',\n    CONCEPT_REGISTRATION_API_HOST: 'https://concept-catalog.demo.fellesdatakatalog.digdir.no',\n    RECORDS_OF_PROCESSING_ACTIVITIES_BASE_URI: 'https://registrering-protokoll.demo.fellesdatakatalog.digdir.no',\n    FDK_COMMUNITY_BASE_URI: 'https://community.demo.fellesdatakatalog.digdir.no/',\n    FDK_CMS_BASE_URI: 'https://cms.fellesdatakatalog.digdir.no',\n    USE_DEMO_LOGO: false,\n  }\n);\n","import LocalizedStrings, { LocalizedStringsMethods } from 'react-localization';\nimport { nb } from './nb';\n\ninterface LocaleStrings extends LocalizedStringsMethods {\n  [key: string]: any;\n}\n\nexport const localization: LocaleStrings = new LocalizedStrings({\n  nb: { ...nb },\n});\n\nlocalization.setLanguage('nb');\n","export const nb = {\n  allCatalogs: 'Alle kataloger',\n\n  btnAddNewDataset: 'Legg til ny datasettbeskrivelse',\n  btnFilterOnPerson: 'Filtrer på person',\n  btnFilterOnStatus: 'Filtrer på status',\n  btnHostSpecification: 'Høst spesifikasjon fra katalog',\n\n  catalogType: 'Datasettkatalog',\n\n  searchForDataset: 'Søk etter datasettbeskrivelse',\n\n  tagApproved: 'Godkjent',\n  tagDraft: 'Utkast',\n  tagPublished: 'Publisert',\n  tagExPublished: 'EksPublisert',\n  tagNonEditable: 'Ikke redigerbar',\n  tagUnderReview: 'Til høring',\n\n  dcatKeywords: {\n    mandatory: 'Obligatorisk',\n    recommended: 'Anbefalt',\n  },\n\n  sectionTitle: {\n    titleAndDescription: 'Tittel og beskrivelse',\n    conceptAndSearchTerms: 'Begrep og søkeord',\n  },\n\n  sectionErrorMessage: \"Ett eller flere obligatoriske felt er ikke fylt ut\"\n};\n"],"names":[],"sourceRoot":""}