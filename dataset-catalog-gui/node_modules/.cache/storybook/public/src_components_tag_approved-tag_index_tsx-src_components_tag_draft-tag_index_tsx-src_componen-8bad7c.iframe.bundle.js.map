{"version":3,"file":"src_components_tag_approved-tag_index_tsx-src_components_tag_draft-tag_index_tsx-src_componen-8bad7c.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAGA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACdA;AACA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAPA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AAeA;AAQA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAMA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sources":["webpack://dataset-catalog-gui/./src/components/icon/index.tsx","webpack://dataset-catalog-gui/./src/components/icon/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/approved-tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/approved-tag/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/draft-tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/draft-tag/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/ex-published-tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/ex-published-tag/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/non-editable-tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/non-editable-tag/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/published-tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/published-tag/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/styled.ts","webpack://dataset-catalog-gui/./src/components/tag/under-review-tag/index.tsx","webpack://dataset-catalog-gui/./src/components/tag/under-review-tag/styled.ts","webpack://dataset-catalog-gui/./src/utils/language/localization.ts","webpack://dataset-catalog-gui/./src/utils/language/nb.ts"],"sourcesContent":["/**\n * Check all available icon name and className here: https://github.com/fellesdatakatalog/fdk-kit/tree/develop/packages/icons/src/assets/svg\n */\n\nimport { SvgIconTypes } from '@fellesdatakatalog/icons';\nimport React, { FC } from 'react';\nimport SC from './styled';\n\ninterface Props {\n  name: SvgIconTypes;\n  className?: string;\n}\n\nconst Icon: FC<Props> = ({ name, className }) => {\n  return <SC.Icon\n    className={className}\n    name={name as SvgIconTypes}\n  />\n};\n\nexport default Icon;\n","import styled from 'styled-components';\nimport SvgIcon from '@fellesdatakatalog/icons';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nconst Icon = styled(SvgIcon)`\n  width: ${theme.spacing('S24')};\n  height: ${theme.spacing('S24')};\n\n  & * {\n    stroke: ${theme.colour(Colour.NEUTRAL, 'N0')};\n  }\n`;\n\nexport default { Icon };\n","import React from 'react';\nimport { localization } from '../../../utils/language/localization';\nimport Icon from '../../icon';\nimport SC from './styled';\n\nconst ApprovedTag = () => <SC.ApprovedTag text={localization.tagApproved} icon={<Icon name='circleCheckStroke' />} />;\n\nexport default ApprovedTag;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Tag from '..';\n\nconst ApprovedTag = styled(Tag)`\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n  background-color: ${theme.colour(Colour.BLUE, 'B30')};\n\n  & * {\n    stroke: ${theme.colour(Colour.BLUE, 'B60')};\n  }\n`;\n\nexport default { ApprovedTag };\n","import React, { FC } from 'react';\n\nimport { localization } from '../../../utils/language/localization';\nimport Icon from '../../icon';\nimport SC from './styled';\n\nconst DraftTag: FC = () => <SC.DraftTag text={localization.tagDraft} icon={<Icon name='pencilStroke' />} />;\n\nexport default DraftTag;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Tag from '..';\n\nconst DraftTag = styled(Tag)`\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n  background-color: ${theme.colour(Colour.BLUE, 'B15')};\n\n  & * {\n    stroke: ${theme.colour(Colour.BLUE, 'B60')};\n  }\n`;\n\nexport default { DraftTag };\n","import React, { FC } from 'react';\n\nimport { localization } from '../../../utils/language/localization';\nimport Icon from '../../icon';\nimport SC from './styled';\n\nconst ExPublishedTag: FC = () => (\n  <SC.ExPublishedTag text={localization.tagExPublished} icon={<Icon name='folderClosedStroke' />} />\n);\n\nexport default ExPublishedTag;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Tag from '..';\n\nconst ExPublishedTag = styled(Tag)`\n  background-color: ${theme.colour(Colour.BLUE, 'B15')};\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n\n  & * {\n    stroke: ${theme.colour(Colour.BLUE, 'B60')};\n  }\n`;\n\nexport default { ExPublishedTag };\n","import React, { FC, ReactElement } from 'react';\nimport SC from './styled';\n\ntype Props = {\n  icon?: ReactElement;\n  text: string;\n  className?: string;\n};\n\nconst Tag: FC<Props> = ({ icon, text, className }) => {\n  return (\n    <SC.Tag className={className}>\n      {icon}\n      <SC.TagText>{text}</SC.TagText>\n    </SC.Tag>\n  );\n};\n\nexport { Props };\nexport default Tag;\n","import React, { FC } from 'react';\n\nimport { localization } from '../../../utils/language/localization';\nimport SC from './styled';\nimport Icon from '../../icon';\n\nconst NonEditableTag: FC = () => (\n  <SC.NonEditableTag text={localization.tagNonEditable} icon={<Icon name='pencilSlashStroke' />} />\n);\n\nexport default NonEditableTag;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Tag from '..';\n\nconst NonEditableTag = styled(Tag)`\n  background-color: ${theme.colour(Colour.BLUE, 'B15')};\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n\n  & * {\n    stroke: ${theme.colour(Colour.BLUE, 'B60')};\n  }\n`;\n\nexport default { NonEditableTag };\n","import React, { FC } from 'react';\n\nimport { localization } from '../../../utils/language/localization';\nimport Icon from '../../icon';\nimport SC from './styled';\n\nconst PublishedTag: FC = () => (\n  <SC.PublishedTag text={localization.tagPublished} icon={<Icon name='globeGridStroke' />} />\n);\n\nexport default PublishedTag;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Tag from '..';\n\nconst PublishedTag = styled(Tag)`\n  background-color: ${theme.colour(Colour.BLUE, 'B60')};\n  color: ${theme.colour(Colour.NEUTRAL, 'N0')};\n\n  & * {\n    stroke: ${theme.colour(Colour.NEUTRAL, 'N0')};\n  }\n`;\n\nexport default { PublishedTag };\n","import { theme } from '@fellesdatakatalog/theme';\nimport styled from 'styled-components';\n\nconst Tag = styled.span`\n  height: ${theme.spacing('S24')};\n  padding: ${theme.spacing('S8')};\n  border-radius: ${theme.spacing('S48')};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing('S4')};\n  width: fit-content;\n\n  svg {\n    width: ${theme.spacing('S12')};\n    height: ${theme.spacing('S12')};\n  }\n`;\n\nconst TagText = styled.span`\n  height: ${theme.spacing('S16')};\n  font-style: normal;\n  font-weight: ${theme.fontWeight('FW400')};\n  font-size: ${theme.fontSize('FS16')};\n  line-height: ${theme.spacing('S16')};\n`;\n\nexport default { Tag, TagText };\n","import React, { FC } from 'react';\n\nimport { localization } from '../../../utils/language/localization';\nimport SC from './styled';\nimport Icon from '../../icon';\n\nconst UnderReviewTag: FC = () => (\n  <SC.UnderReviewTag text={localization.tagUnderReview} icon={<Icon name='documentClockStroke' />} />\n);\n\nexport default UnderReviewTag;\n","import styled from 'styled-components';\nimport { Colour, theme } from '@fellesdatakatalog/theme';\n\nimport Tag from '..';\n\nconst UnderReviewTag = styled(Tag)`\n  color: ${theme.colour(Colour.BLUE, 'B60')};\n  background-color: ${theme.colour(Colour.BLUE, 'B15')};\n\n  & * {\n    stroke: ${theme.colour(Colour.BLUE, 'B60')};\n  }\n`;\n\nexport default { UnderReviewTag };\n","import LocalizedStrings, { LocalizedStringsMethods } from 'react-localization';\nimport { nb } from './nb';\n\ninterface LocaleStrings extends LocalizedStringsMethods {\n  [key: string]: any;\n}\n\nexport const localization: LocaleStrings = new LocalizedStrings({\n  nb: { ...nb },\n});\n\nlocalization.setLanguage('nb');\n","export const nb = {\n  allCatalogs: 'Alle kataloger',\n\n  btnAddNewDataset: 'Legg til ny datasettbeskrivelse',\n  btnFilterOnPerson: 'Filtrer på person',\n  btnFilterOnStatus: 'Filtrer på status',\n  btnHostSpecification: 'Høst spesifikasjon fra katalog',\n\n  catalogType: 'Datasettkatalog',\n\n  searchForDataset: 'Søk etter datasettbeskrivelse',\n\n  tagApproved: 'Godkjent',\n  tagDraft: 'Utkast',\n  tagPublished: 'Publisert',\n  tagExPublished: 'EksPublisert',\n  tagNonEditable: 'Ikke redigerbar',\n  tagUnderReview: 'Til høring',\n\n  dcatKeywords: {\n    mandatory: 'Obligatorisk',\n    recommended: 'Anbefalt',\n  },\n\n  sectionTitle: {\n    titleAndDescription: 'Tittel og beskrivelse',\n    conceptAndSearchTerms: 'Begrep og søkeord',\n  },\n\n  sectionErrorMessage: \"Ett eller flere obligatoriske felt er ikke fylt ut\"\n};\n"],"names":[],"sourceRoot":""}